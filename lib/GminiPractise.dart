import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'CustomWidgetFunction/CustomFunctions.dart';
//ржоржбрж┐ржЙрж▓ рзи button
/*
class GminiPractise extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Gmini Practise")),
      body: Center(
        child: Container(
          color: Colors.cyan,
          height: 500,
          width: 500,
          child: Column(
            children: [
              Text("Goto Project Using Button"),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  ElevatedButton(
                      onPressed: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(builder: (context) => ListStackBuilder()),
                        );
                      },
                      child: Text("ListStack Task")),
                  SizedBox(width: 10),
                  ElevatedButton(onPressed: () {}, child: Text("List Task")),
                ],
              )
            ],
          ),
        ),
      ),
    );
  }
}

 */

// ржоржбрж┐ржЙрж▓ рзи Stack ржУ ListView Task Ans:
/*
class ListStackBuilder extends StatelessWidget{
  var listitm = ["one","two","three","four","five","six","seven","eight","nine","ten"];
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: ListView.builder(
        itemCount: listitm.length,
        itemBuilder: (BuildContext context,int index){
          return Container(
            height: 200,
            margin: EdgeInsets.all(10),
            child: Stack(
              children:<Widget> [
                Image.network('https://i.postimg.cc/7hfT9WzL/145ad8a8af3318681a705f281a44c3a3.jpg',fit: BoxFit.cover,),
                Positioned(
                  bottom: 0,
                  left: 0,
                  right: 0,
                  child: Container(
                    color: Colors.black.withOpacity(0.6),
                    child: Text(listitm[index],style: TextStyle(color: Colors.white),textAlign: TextAlign.center,),
                  ),
                ),
              ],
            ),

          );

        },
      ),

    );

  }

}

 */
///ржоржбрж┐ржЙрж▓ рзи-ржПрж░ рж╢рзЗрж╖ ржзрж╛ржк,  StatefulWidget
/*
class GminiPractise extends StatefulWidget {
  const GminiPractise({super.key});
  @override
  State<GminiPractise> createState() => _GminiPractiseState();
}

class _GminiPractiseState extends State<GminiPractise> {
  bool _isLiked =false;
  int _likeCount = 0;
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        appBar: AppBar(title: Text("Gmini StatefulWidget"),backgroundColor: Colors.yellow,),
        body: Center(
          child: Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              GestureDetector(
                onTap: (){
                  setState(() {
                    if(_isLiked == false){
                      _isLiked = true;
                      _likeCount++;
                    }else{
                      _isLiked = false;
                      _likeCount--;
                    }


                  });

                },
                child: _isLiked == true? Icon(Icons.favorite,color: Colors.red,size: 30,) : Icon(Icons.favorite_border,size: 30),
              ),
              SizedBox(width: 10,),
              Text(_likeCount.toString(),style: TextStyle(fontSize: 30,fontWeight: FontWeight.bold, color: Colors.blue,),),
            ],


          ),
        ),
      ),
    );
  }
}

 */

// ржкрж░рзАржХрзНрж╖рж╛ (Exam)  ржкрзНрж░ржЬрзЗржХрзНржЯ (Project) ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржмрж┐ржЬржирзЗрж╕ ржХрж╛рж░рзНржб" ржЕрзНржпрж╛ржк
/*
ржПржЗ ржХрзЛржбржЯрж┐ ржПржХржЯрж┐ StatelessWidget ржпрж╛ ржПржХржЯрж┐ Flutter ржЕрзНржпрж╛ржкрзЗ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржХрж╛рж░рзНржб ржжрзЗржЦрж╛рзЯред ржХрж╛рж░рзНржбрзЗ ржЗржЙржЬрж╛рж░рзЗрж░ ржЫржмрж┐,
 ржирж╛ржо, ржкрзЗрж╢рж╛, ржЗржорзЗржЗрж▓ ржУ ржлрзЛржи ржиржорзНржмрж░ рж░рзЯрзЗржЫрзЗред ржПржЯрж┐ Scaffold, AppBar, Card, ListTile, Row, ржПржмржВ Icon widget ржЧрзБрж▓рзЛрж░ рж╕ржоржирзНржмрзЯрзЗ рждрзИрж░рж┐ ржПржХржЯрж┐ рж╕рж╛ржзрж╛рж░ржг
 UI layoutред ржПрж░ ржорж╛ржзрзНржпржорзЗ Flutter UI рждрзИрж░рж┐ ржУ ржбрж╛ржЯрж╛ ржжрзЗржЦрж╛ржирзЛрж░ ржПржХржЯрж┐ рж╕рзБржирзНржжрж░ ржмрж╛рж╕рзНрждржм ржЙржжрж╛рж╣рж░ржг рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред

 */
///ржоржбрж┐ржЙрж▓ 2: ржПржХржЯрж┐ "ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржмрж┐ржЬржирзЗрж╕ ржХрж╛рж░рзНржб" ржЕрзНржпрж╛ржк
/*
class GminiPractise extends StatelessWidget {                       // ЁЯУМ ржПржХржЯрж┐ StatelessWidget ржХрзНрж▓рж╛рж╕ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ ржпрж╛рж░ ржирж╛ржо GminiPractise
  const GminiPractise({super.key});                                   // ЁЯФР Constructor ржпрж╛ key ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржЧрзНрж░рж╣ржг ржХрж░рзЗ (optional)

  final String Imgurl = "https://i.postimg.cc/jjKRZgRq/profile-pic-1.png";   // ЁЯЦ╝я╕П ржПржХржЯрж┐ image URL рж╕рзНржЯрзЛрж░ ржХрж░рж╛рж░ ржЬржирзНржп ржлрж┐ржХрзНрж╕ржб рж╕рзНржЯрзНрж░рж┐ржВ ржнрзНржпрж╛рж▓рзБ

  @override
  Widget build(BuildContext context) {                                     // ЁЯФБ build() method тАУ UI рж░рзЗржирзНржбрж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп ржХрж╛ржЬ ржХрж░рзЗ
    return Scaffold(                                // ЁЯз▒ Scaffold тАУ ржПржХржЯрж┐ basic layout structure
      appBar: AppBar(                               // ЁЯЯж AppBar тАУ ржЙржкрж░рзЗрж░ title bar
        title: Text("Gmini Practise"),              // ЁЯУЭ AppBar ржПрж░ ржоржзрзНржпрзЗ ржЯрж╛ржЗржЯрзЗрж▓
      ),
      body: Center(                                 // ЁЯУж Body ржХрзЗ рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржорж╛ржЭрзЗ ржЖржиржмрзЗ
        child: Column(                              // тЖХя╕П ржПржХрзЗрж░ ржкрж░ ржПржХ UI item ржжрзЗржЦрж╛рждрзЗ Column ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
          children: [
            Container(                              // ЁЯУж ржПржХржЯрж┐ container ржпрж╛рждрзЗ ржХрж╛рж░рзНржбржЯрж┐ рж░рж╛ржЦрж╛ рж╣рзЯрзЗржЫрзЗ
              height: 220,                          // тЖХя╕П Container ржПрж░ ржЙржЪрзНржЪрждрж╛ 220px
              width: 300,                           // тЖФя╕П ржкрзНрж░рж╕рзНрже 300px
              child: Card(                          // ЁЯГП Card widget тАУ рж╕рзБржирзНржжрж░ Shadow рж╕рж╣ box рждрзИрж░рж┐
                margin: EdgeInsets.all(20),         // ЁЯз▒ Card ржПрж░ ржЪрж╛рж░ржкрж╛рж╢рзЗ рзирзжpx margin
                elevation: 30,                      // ЁЯкД Card ржПрж░ shadow depth тАУ 30 ржорж╛ржирзЗ ржЕржирзЗржХ ржЙржБржЪрзБ

                child: Column(                      // тЖХя╕П Card ржПрж░ ржоржзрзНржпрзЗ ржПрж▓рж┐ржорзЗржирзНржЯржЧрзБрж▓рзЛ рж╕рж╛ржЬрж╛ржирзЛ рж╣рзЯрзЗржЫрзЗ Column ржжрж┐рзЯрзЗ
                  mainAxisSize: MainAxisSize.min,   // ЁЯФз Card ржПрж░ height content ржЕржирзБржпрж╛рзЯрзА рж╣ржмрзЗ (min ржорж╛ржирзЗ ржпрждржЯрзБржХрзБ ржжрж░ржХрж╛рж░)
                  children: [

                    ListTile(                       // ЁЯУЛ ListTile тАУ ржПржХржЯрж┐ row ржЖржХрж╛рж░рзЗ ржбрзЗржЯрж╛ ржжрзЗржЦрж╛рждрзЗ ржмрзНржпржмрж╣рзГржд widget
                      leading: CircleAvatar(        // ЁЯзС ржмрж╛ржо ржкрж╛рж╢рзЗ ржПржХржЯрж┐ ржЧрзЛрж▓рж╛ржХрж╛рж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржЫржмрж┐
                        backgroundImage:NetworkImage(Imgurl),  // ЁЯМР ржЗржирзНржЯрж╛рж░ржирзЗржЯ ржерзЗржХрзЗ ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржЗржорзЗржЬ рж▓рзЛржб рж╣ржЪрзНржЫрзЗ
                      ),
                      title: Text("Saidur Rahman"),     // ЁЯФа ржЯрж╛ржЗржЯрзЗрж▓ тАУ ржЗржЙржЬрж╛рж░рзЗрж░ ржирж╛ржо
                      subtitle: Text("App Developer"),  // ЁЯУМ рж╕рж╛ржмржЯрж╛ржЗржЯрзЗрж▓ тАУ ржкрзЗрж╢рж╛
                    ),

                    Divider(                        // тЮЦ ржПржХржЯрж┐ divider рж▓рж╛ржЗржи (horizontal line)
                      color: Colors.purple,         // ЁЯЯг Divider ржПрж░ рж░ржЩ
                      thickness: 3,                 // ЁЯФБ Divider ржПрж░ ржкрзБрж░рзБрждрзНржм рзйpx
                      endIndent: 20,                // тЖШя╕П ржбрж╛ржи ржкрж╛рж╢рзЗ рзирзжpx ржлрж╛ржБржХрж╛ рж░рж╛ржЦрж╛ рж╣рзЯрзЗржЫрзЗ
                    ),

                    Row(                            // тЖФя╕П ржПржХржЯрж┐ row тАУ ржЗржорзЗржЗрж▓ ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп
                      mainAxisAlignment: MainAxisAlignment.center,  // тЖФя╕П ржорж╛ржЭ ржмрж░рж╛ржмрж░ ржЕрзНржпрж╛рж▓рж╛ржЗржи
                      children: [
                        Icon(Icons.email),          // ЁЯУз Email ржЖржЗржХржи
                        Text("saidur0410@gmail.com")// тЬЙя╕П Email address
                      ],
                    ),

                    SizedBox(height: 5,),           // тЖХя╕П ржПржХржЯрзБ ржлрж╛ржБржХрж╛ ржЬрж╛рзЯржЧрж╛ рж░рж╛ржЦрж╛рж░ ржЬржирзНржп

                    Row(                            // тЖФя╕П ржПржХржЯрж┐ row тАУ ржлрзЛржи ржиржорзНржмрж░ ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп
                      mainAxisAlignment: MainAxisAlignment.center,  // тЖФя╕П ржорж╛ржЭ ржмрж░рж╛ржмрж░ ржЕрзНржпрж╛рж▓рж╛ржЗржи
                      children: [
                        Icon(Icons.call),           // ЁЯУЮ Call ржЖржЗржХржи
                        Text("01817278961")         // тШОя╕П ржлрзЛржи ржиржорзНржмрж░
                      ],
                    )
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}

 */

///ржкрзНрж░рзНржпрж╛ржХржЯрж┐рж╕ ржЯрж╛рж╕рзНржХ Ans:
/*
class GminiPractise extends StatefulWidget {
   const GminiPractise({super.key});


  @override
  State<GminiPractise> createState() => _GminiPractiseState();
}

class _GminiPractiseState extends State<GminiPractise> {
  final TextEditingController _nameC = TextEditingController();
  String _DisplyName = "";
  ///txtStyle Function
  txtStyl(){
    return TextStyle(fontSize: 20,fontWeight: FontWeight.bold,color: Colors.red);
  }
  @override
  void dispose(){
    _nameC.dispose();
    super.dispose();
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("TextField "),),
      body: Padding(
        padding: EdgeInsets.all(20),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.start,
          children: [
            TextField(
              controller: _nameC,
              decoration: InputDecoration(
                labelText:"Enter Yor Name",
                hintText: 'Ex. Hiru',
                border: OutlineInputBorder(),
              ),

            ),
            SizedBox(height: 10,),
            ElevatedButton(onPressed: (){
              if(_nameC.text.isNotEmpty){
                setState(() {
                  _DisplyName = _nameC.text;
                });
              }else{
                setState(() {
                  _DisplyName = "Please Enter Your Name";
                });
              }

            }, child: Text("Greet Me")),
            SizedBox(height: 15,),
            Text("Hello, ${_DisplyName}",style: txtStyl(),)
            
          ],
          
        ),
      ),
    );
  }
}

 */

//taSK Ans: TextFormField
class GminiPractise extends StatefulWidget {
  const GminiPractise({super.key});

  @override
  State<GminiPractise> createState() => _GminiPractiseState();
}

class _GminiPractiseState extends State<GminiPractise> {
   snkbtn(msg,context){
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(msg)));
  }
  final _formKey  = GlobalKey<FormState>();
   TextEditingController _nameC = TextEditingController();
   TextEditingController _mailC = TextEditingController();
   String nameDis = "";
   String mailmeDis = "";
   String isSuccess = "";
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Registration Form Task"),),
      body: Padding(
          padding: EdgeInsets.all(20),
          child: Form(
            key: _formKey ,
            child: Column(
              children: [
                TextFormField(
                  controller: _nameC,
                  validator: (value){
                    if(value!.isEmpty){
                      return "Please Fill Your Name";
                    }
                    return null;
                  },
                  decoration: InputDecoration(
                    labelText: "Enter Your Name",
                    hintText: "Ex. Hiru",
                    border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),

                  ),
                ),
                SizedBox(height: 15,),

                TextFormField(
                  controller: _mailC,
                  validator: (value){
                    if(value!.isEmpty || value.contains("@")==false){
                      return "Please Fill Your Valid Email";
                    }
                    return null;
                  },

                  decoration: InputDecoration(
                    labelText: "Enter Your Email",
                    hintText: "Ex. fsgf@gmail.com",
                    border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),

                  ),
                ),
                SizedBox(height: 15,),

                TextFormField(
                  validator: (value){
                    if(value!.isEmpty || value.length < 8){
                      return "Please Fill Your Valid Password";
                    }
                    return null;

                  },
                  obscureText: true,
                  decoration: InputDecoration(
                    labelText: "Enter Your Pass",
                    hintText: "@gsg!Dg",
                    border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),

                  ),
                ),
                SizedBox(height: 20,),
                ElevatedButton(onPressed: (){
                  if (_formKey .currentState!.validate()) {
                    snkbtn("Registration Successful!!", context);
                    setState(() {
                      nameDis = "Your Name is ${_nameC.text}";
                      mailmeDis = "Your Email is ${_mailC.text}";
                      isSuccess = "Registration Successful!!";
                    });
                  }

                }, child: Text("Register")),
                SizedBox(height: 10,),
                Text(nameDis.toString()),
                SizedBox(height: 10,),
                Text(mailmeDis),
                SizedBox(height: 10,),
                Text(isSuccess),




              ],

            ),)
      ),
    );
  }
}

