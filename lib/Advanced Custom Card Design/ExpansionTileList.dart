import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

/*
1Ô∏è‚É£ ExpansionTile ‡¶ï‡ßÄ?

ExpansionTile Flutter ‡¶è‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶¨‡¶ø‡¶≤‡ßç‡¶ü-‡¶á‡¶® ‡¶â‡¶á‡¶ú‡ßá‡¶ü ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡¶ï‡ßá ‡¶ü‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ñ‡ßÅ‡¶≤‡ßá ‡¶Ø‡¶æ‡ßü (expand ‡¶π‡ßü) ‡¶Ü‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá ‡¶Ü‡¶∞‡¶ì ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü‡•§
‡¶è‡¶ü‡¶æ‡¶ï‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø Accordion View ‡¶ì ‡¶¨‡¶≤‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§

üìå Key Features:
‡¶∂‡¶ø‡¶∞‡ßã‡¶®‡¶æ‡¶Æ (title)
‡¶∏‡¶æ‡¶¨-‡¶∂‡¶ø‡¶∞‡ßã‡¶®‡¶æ‡¶Æ (subtitle) (optional)
‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶§‡ßá ‡¶Ü‡¶á‡¶ï‡¶® ‡¶¨‡¶æ ‡¶õ‡¶¨‡¶ø (leading)
‡¶°‡¶æ‡¶® ‡¶™‡¶æ‡¶∂‡ßá expand/collapse arrow
expand ‡¶π‡¶≤‡ßá ‡¶≠‡ßá‡¶§‡¶∞‡ßá children widgets ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã ‡¶Ø‡¶æ‡ßü
,,,,,,,,,,,,,,,,,,,,
2Ô∏è‚É£ ‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£

‡¶ß‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶ï ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø FAQ App ‡¶Ü‡¶õ‡ßá‡•§

‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®: Flutter ‡¶ï‡ßÄ?
‚Üí ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶ü‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§

‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®: Dart ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá?
‚Üí ‡¶ü‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§

‡¶è‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡ßá ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶π‡¶¨‡ßá ExpansionTile ‡¶è‡¶∞ title, ‡¶Ü‡¶∞ ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶π‡¶¨‡ßá ‡¶è‡¶∞ children‡•§
Widget Tree (‡¶°‡¶æ‡ßü‡¶æ‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ)
Scaffold
 ‚îî‚îÄ‚îÄ AppBar
 ‚îî‚îÄ‚îÄ ListView.builder
      ‚îî‚îÄ‚îÄ ExpansionTile (for each contact)
           ‚îú‚îÄ‚îÄ leading: CircleAvatar
           ‚îú‚îÄ‚îÄ title: Text (Name)
           ‚îú‚îÄ‚îÄ subtitle: Text (Phone)
           ‚îî‚îÄ‚îÄ children:
                ‚îú‚îÄ‚îÄ ListTile (Email)
                ‚îî‚îÄ‚îÄ ListTile (Address)
‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨ ‡¶á‡¶â‡¶ú‡¶ï‡ßá‡¶∏

FAQ Section (Question ‚Üí Answer)
E-commerce Category (Category ‚Üí Sub-category list)
Settings Menu (Parent Setting ‚Üí Sub-settings)
Chat App (User ‚Üí User details)

 */

///Practice Task 6.32: ExpansionTile & Custom Expandable List: Ans:
class ExpansionTileExample  extends StatelessWidget {
   ExpansionTileExample ({super.key});
  SnackBarCustom(msg,context){
    return ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(msg),duration: Duration(seconds: 1),));
  }

   final List<Map<String, dynamic>> catagoryItems = [
     {
       'icon': Icons.electrical_services,
       'name': 'Electronics',
     },
     {
       'icon': Icons.shopping_bag,
       'name': 'Fashion',
     },

     {
       'icon': Icons.home,
       'name': 'Home & Lifestyle',
     },
   ];



  @override
  Widget build(BuildContext context) {
    return  Scaffold(
      appBar: AppBar(title: Text("ExpansionTile ProductList "),backgroundColor: Colors.purple,),
      body: ListView(
          children: [
            ExpansionTile(
              leading: Icon(catagoryItems[0]['icon'],color: Colors.blue),
              title: Text(catagoryItems[0]['name'],style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
              children: [
                ListTile(title: Text("Smartphones"),onTap: (){SnackBarCustom("Smartphones", context);}),
                Divider(),
                ListTile(title: Text("Laptop"),onTap: (){SnackBarCustom("Laptop", context);}),
                Divider(),
                ListTile(title: Text("Cameras"),onTap: (){SnackBarCustom("Cameras", context);}),


              ],

            ),

            ExpansionTile(
              leading: Icon(catagoryItems[1]['icon'],color: Colors.blue),
              title: Text(catagoryItems[1]['name'],style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
              children: [
                ListTile(title: Text("Men's Wear"),onTap: (){SnackBarCustom("Men's Wear", context);}),
                Divider(),
                ListTile(title: Text("Women's Wear"),onTap: (){SnackBarCustom("Women's Wear", context);}),
                Divider(),
                ListTile(title: Text("Kids' Wear"),onTap: (){SnackBarCustom("Kids' Wear", context);}),


              ],

            ),

            ExpansionTile(
              leading: Icon(catagoryItems[2]['icon'],color: Colors.blue),
              title: Text(catagoryItems[2]['name'],style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
              children: [
                ListTile(title: Text("Furniture"),onTap: (){SnackBarCustom("Furniture", context);}),
                Divider(),
                ListTile(title: Text("Kitchenware"),onTap: (){SnackBarCustom("Kitchenware", context);}),
                Divider(),
                ListTile(title: Text("Home Decor"),onTap: (){SnackBarCustom("Home Decor", context);}),


              ],

            ),
          ],
      ),
    );
  }
}


///Better Way Using Loop
/*
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

/*
1Ô∏è‚É£ ExpansionTile ‡¶ï‡ßÄ?

ExpansionTile Flutter ‡¶è‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶¨‡¶ø‡¶≤‡ßç‡¶ü-‡¶á‡¶® ‡¶â‡¶á‡¶ú‡ßá‡¶ü ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡¶ï‡ßá ‡¶ü‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ñ‡ßÅ‡¶≤‡ßá ‡¶Ø‡¶æ‡ßü (expand ‡¶π‡ßü) ‡¶Ü‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá ‡¶Ü‡¶∞‡¶ì ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü‡•§
‡¶è‡¶ü‡¶æ‡¶ï‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø Accordion View ‡¶ì ‡¶¨‡¶≤‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§

üìå Key Features:
‡¶∂‡¶ø‡¶∞‡ßã‡¶®‡¶æ‡¶Æ (title)
‡¶∏‡¶æ‡¶¨-‡¶∂‡¶ø‡¶∞‡ßã‡¶®‡¶æ‡¶Æ (subtitle) (optional)
‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶§‡ßá ‡¶Ü‡¶á‡¶ï‡¶® ‡¶¨‡¶æ ‡¶õ‡¶¨‡¶ø (leading)
‡¶°‡¶æ‡¶® ‡¶™‡¶æ‡¶∂‡ßá expand/collapse arrow
expand ‡¶π‡¶≤‡ßá ‡¶≠‡ßá‡¶§‡¶∞‡ßá children widgets ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã ‡¶Ø‡¶æ‡ßü
,,,,,,,,,,,,,,,,,,,,
2Ô∏è‚É£ ‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£

‡¶ß‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶ï ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø FAQ App ‡¶Ü‡¶õ‡ßá‡•§

‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®: Flutter ‡¶ï‡ßÄ?
‚Üí ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶ü‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§

‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®: Dart ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá?
‚Üí ‡¶ü‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§

‡¶è‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡ßá ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶π‡¶¨‡ßá ExpansionTile ‡¶è‡¶∞ title, ‡¶Ü‡¶∞ ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶π‡¶¨‡ßá ‡¶è‡¶∞ children‡•§
Widget Tree (‡¶°‡¶æ‡ßü‡¶æ‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ)
Scaffold
 ‚îî‚îÄ‚îÄ AppBar
 ‚îî‚îÄ‚îÄ ListView.builder
      ‚îî‚îÄ‚îÄ ExpansionTile (for each contact)
           ‚îú‚îÄ‚îÄ leading: CircleAvatar
           ‚îú‚îÄ‚îÄ title: Text (Name)
           ‚îú‚îÄ‚îÄ subtitle: Text (Phone)
           ‚îî‚îÄ‚îÄ children:
                ‚îú‚îÄ‚îÄ ListTile (Email)
                ‚îî‚îÄ‚îÄ ListTile (Address)
‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨ ‡¶á‡¶â‡¶ú‡¶ï‡ßá‡¶∏

FAQ Section (Question ‚Üí Answer)
E-commerce Category (Category ‚Üí Sub-category list)
Settings Menu (Parent Setting ‚Üí Sub-settings)
Chat App (User ‚Üí User details)

 */

///Practice Task 6.32: ExpansionTile & Custom Expandable List: Ans:
class ExpansionTileExample extends StatelessWidget {
  ExpansionTileExample({super.key});

  SnackBarCustom(String msg, BuildContext context) {
    return ScaffoldMessenger.of(context).showSnackBar(SnackBar(
      content: Text(msg),
    ));
  }

  // ‡¶°‡ßá‡¶ü‡¶æ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶æ‡¶ï‡¶ö‡¶æ‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßá ‡¶∏‡¶æ‡¶¨-‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
  final List<Map<String, dynamic>> catagoryItems = [
    {
      'icon': Icons.electrical_services,
      'name': 'Electronics',
      'subItems': [
        {'title': 'Smartphones'},
        {'title': 'Cameras'},
        {'title': 'Laptops'},
      ],
    },
    {
      'icon': Icons.shopping_bag,
      'name': 'Fashion',
      'subItems': [
        {'title': 'Men\'s Wear'},
        {'title': 'Women\'s Wear'},
        {'title': 'Kids\' Wear'},
      ],
    },
    {
      'icon': Icons.home,
      'name': 'Home & Lifestyle',
      'subItems': [
        {'title': 'Furniture'},
        {'title': 'Kitchenware'},
        {'title': 'Home Decor'}, // "Laptops" ‡¶è‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡ßá "Home Decor" ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
      ],
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("ExpansionTile ProductList "),
        backgroundColor: Colors.purple,
      ),
      body: ListView.builder(
        itemCount: catagoryItems.length,
        itemBuilder: (context, index) {
          // itemBuilder ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ExpansionTile ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá
          return ExpansionTile(
            leading: Icon(
              catagoryItems[index]['icon'],
              color: Colors.teal,
            ),
            title: Text(
              catagoryItems[index]['name'],
              style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
            ),
            children: (catagoryItems[index]['subItems'] as List<Map<String, String>>)
                .map((subItem) {
              return ListTile(
                title: Text(subItem['title']!),
                onTap: () => SnackBarCustom(subItem['title']!, context),
              );
            }).toList(),
          );
        },
      ),
    );
  }
}

 */



class ExpansionTileOptimized extends StatelessWidget {
  ExpansionTileOptimized({super.key});

  // SnackBar Function
  void showSnackBar(BuildContext context, String msg) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text(msg), duration: const Duration(seconds: 1)),
    );
  }

  // Data: Category List with Items
  final List<Map<String, dynamic>> categories = [
    {
      'icon': Icons.electrical_services,
      'name': 'Electronics',
      'items': ['Smartphones', 'Laptop', 'Cameras']
    },
    {
      'icon': Icons.shopping_bag,
      'name': 'Fashion',
      'items': ["Men's Wear", "Women's Wear", "Kids' Wear"]
    },
    {
      'icon': Icons.home,
      'name': 'Home & Lifestyle',
      'items': ['Furniture', 'Kitchenware', 'Home Decor']
    }
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("ExpansionTile Product List"),
        backgroundColor: Colors.purple,
      ),
      body: ListView.builder(
        itemCount: categories.length,
        itemBuilder: (context, catIndex) {
          final category = categories[catIndex];
          return ExpansionTile(
            leading: Icon(category['icon'], color: Colors.blue),
            title: Text(
              category['name'],
              style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            children: List.generate(category['items'].length, (index) {
              final item = category['items'][index];
              return Column(
                children: [
                  ListTile(
                    contentPadding: const EdgeInsets.only(left: 72, right: 16),
                    title: Text(item),
                    onTap: () => showSnackBar(context, item),
                  ),
                  if (index != category['items'].length - 1) const Divider(),
                ],
              );
            }),
          );
        },
      ),
    );
  }
}
/*
‡¶ï‡ßã‡¶°‡ßá‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ì ‡¶â‡¶®‡ßç‡¶®‡¶§‡¶ø

List<Map> ‡¶¶‡¶ø‡ßü‡ßá Data Store ‚Äî ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø ‡¶¨‡¶æ ‡¶∏‡¶æ‡¶¨-‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡¶≤‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ data list ‡¶è ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§

ListView.builder + ExpansionTile ‚Äî ‡¶≤‡ßÅ‡¶™‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø ‡¶§‡ßà‡¶∞‡¶ø‡•§

Padding Adjustment ‚Äî Sub-item ‡¶ó‡ßÅ‡¶≤‡ßã parent icon/title ‡¶è‡¶∞ ‡¶®‡¶ø‡¶ö‡ßá ‡¶á‡¶®‡¶°‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶° ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§

Dynamic Divider ‚Äî ‡¶∂‡ßá‡¶∑ ‡¶∏‡¶æ‡¶¨-‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡ßá‡¶∞ ‡¶™‡¶∞‡ßá Divider ‡¶Ü‡¶∏‡¶¨‡ßá ‡¶®‡¶æ‡•§

Consistent Icon Color ‚Äî ‡¶∏‡¶¨ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø‡¶∞ icon ‡¶è‡¶∞ ‡¶∞‡¶ô ‡¶è‡¶ï ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§
 */
class ExpenLExam extends StatelessWidget {
   ExpenLExam({super.key});
  final List<Map<String, dynamic>> Items = [
    {
      'icon': Icons.web,
      'name': 'Web',
      'items': ['HTML', 'CSS', 'JS']
    },
    {
      'icon': Icons.app_blocking,
      'name': 'App',
      'items': ["Dart", "Kotlin", "Java","ReactJs"]
    },
    {
      'icon': Icons.air,
      'name': 'Ai',
      'items': ['python', 'Math', 'BlockChain']
    }
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("ExpansionTile ProductList "),backgroundColor: Colors.purple,),
      body: ListView.builder(
        itemCount: Items.length,
          itemBuilder: (context,Itindex){
          final itm = Items[Itindex];
          return ExpansionTile(
            leading: Icon(itm['icon'],color: Colors.blue),
            title: Text(itm['name'],style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),),
            children: List.generate(itm['items'].length, (index){
              final ittem = itm['items'][index];
              return Column(
                children: [
                  ListTile(
                    contentPadding: EdgeInsets.only(left: 72,right: 16),
                    title:Text(ittem),
                    onTap: (){
                      ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(ittem),duration: Duration(seconds: 1),));
                    },
                  ),
                  if (index != itm['items'].length - 1) const Divider()

                ],


              );

            }),

          );
          }
      )
    );
  }
}
