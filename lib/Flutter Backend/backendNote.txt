Asynchronous Programming (async/await):
ржирзЗржЯржУржпрж╝рж╛рж░рзНржХ ржерзЗржХрзЗ ржбрзЗржЯрж╛ ржЖрж╕рждрзЗ ржХрж┐ржЫрзБржЯрж╛ рж╕ржоржпрж╝ рж▓рж╛ржЧрзЗред ржЖржорж░рж╛ ржЪрж╛ржЗ ржирж╛ ржПржЗ
рж╕ржоржпрж╝ржЯрзБржХрзБ ржЖржорж╛ржжрзЗрж░ ржЕрзНржпрж╛ржкржЯрж┐ ржЬржорзЗ (freeze) ржерж╛ржХрзБржХред рждрж╛ржЗ ржЖржорж░рж╛ ржЕрзНржпрж╛рж╕рж┐ржЩрзНржХрзНрж░рзЛржирж╛рж╕ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ред

Future: ржПржЯрж┐ ржПржХржЯрж┐ ржкрзНрж░рждрж┐рж╢рзНрж░рзБрждрж┐ ржпрзЗ ржнржмрж┐рж╖рзНржпрждрзЗ ржХрзЛржирзЛ ржбрзЗржЯрж╛ ржЖрж╕ржмрзЗред
async: ржХрзЛржирзЛ ржлрж╛ржВрж╢ржиржХрзЗ async рж╣рж┐рж╕рзЗржмрзЗ ржорж╛рж░рзНржХ ржХрж░рж▓рзЗ, рж╕рзЗржЯрж┐ ржмрзНржпрж╛ржХржЧрзНрж░рж╛ржЙржирзНржбрзЗ рж░рж╛ржи ржХрж░рждрзЗ ржкрж╛рж░рзЗред
await: async ржлрж╛ржВрж╢ржирзЗрж░ ржнрзЗрждрж░рзЗ ржХрзЛржирзЛ Future-ржПрж░ ржХрж╛ржЬ рж╢рзЗрж╖ ржирж╛ рж╣ржУрзЯрж╛ ржкрж░рзНржпржирзНржд ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзЗред

**FutureBuilder ржжрж┐рзЯрзЗ ржбрзЗржЯрж╛ ржжрзЗржЦрж╛ржирзЛ:
FutureBuilder ржПржХржЯрж┐ ржЕрж╕рж╛ржзрж╛рж░ржг ржЙржЗржЬрзЗржЯ,
ржпрж╛ ржПржХржЯрж┐ Future-ржПрж░ ржмрж┐ржнрж┐ржирзНржи ржЕржмрж╕рзНржерж╛рж░ (ржпрзЗржоржи: рж▓рзЛржбрж┐ржВ, ржбрзЗржЯрж╛ ржПрж╕рзЗржЫрзЗ, ржПрж░рж░ рж╣рзЯрзЗржЫрзЗ)
ржУржкрж░ ржнрж┐рждрзНрждрж┐ ржХрж░рзЗ UI рждрзИрж░рж┐ ржХрж░рзЗред
............................................................................
ЁЯФН snapshot ржХрзА?

ЁЯСЙ snapshot ржорж╛ржирзЗ рж╣рж▓рзЛ тАФ Future ржПрж░ ржмрж░рзНрждржорж╛ржи ржЕржмрж╕рзНржерж╛ ржЖрж░ ржбрзЗржЯрж╛рж░ ржЫржмрж┐ (status + data + error ржПржХрж╕рж╛ржерзЗ ржзрж░рзЗ рж░рж╛ржЦрзЗ)ред
FutureBuilder ржпржЦржи ржХрж╛ржЬ ржХрж░рзЗ, рждржЦржи snapshot ржжрж┐рзЯрзЗ ржЖржорж░рж╛ ржЬрж╛ржирждрзЗ ржкрж╛рж░рж┐:

ржПржЦржи ржбрзЗржЯрж╛ рж▓рзЛржб рж╣ржЪрзНржЫрзЗ ржирж╛ржХрж┐ рж╢рзЗрж╖ рж╣рзЯрзЗржЫрзЗ?
ржбрзЗржЯрж╛ ржПрж╕рзЗржЫрзЗ ржирж╛ржХрж┐ error рж╣рзЯрзЗржЫрзЗ?

ржбрзЗржЯрж╛ ржПрж▓рзЗ рж╕рзЗржЯрж╛ ржХрзА?
ЁЯЫая╕П snapshot ржПрж░ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг property
1. snapshot.connectionState

Future ржПрж░ ржЕржмрж╕рзНржерж╛ ржмрзЛржЭрж╛рзЯред
ржкрзНрж░ржзрж╛ржи ржХрзЯрзЗржХржЯрж╛ state:
waiting тЖТ Future ржПржЦржирзЛ ржЪрж▓ржЫрзЗ (рж▓рзЛржб рж╣ржЪрзНржЫрзЗ)ред
done тЖТ Future рж╢рзЗрж╖ рж╣рзЯрзЗ ржЧрзЗржЫрзЗ (ржбрзЗржЯрж╛ ржПрж╕рзЗржЫрзЗ ржмрж╛ error рж╣рзЯрзЗржЫрзЗ)ред

ЁЯСЙ ржЙржжрж╛рж╣рж░ржг:
if (snapshot.connectionState == ConnectionState.waiting) {
  return CircularProgressIndicator(); // Loading ржжрзЗржЦрж╛ржУ
}

2. snapshot.hasData
ржпржжрж┐ Future ржерзЗржХрзЗ ржбрзЗржЯрж╛ ржЖрж╕рзЗ тЖТ true рж╣ржмрзЗред
ржмрзНржпржмрж╣рж╛рж░: ржбрзЗржЯрж╛ ржкрзЗрж▓рзЗ рж╕рзЗржЯрж┐ UI рждрзЗ ржжрзЗржЦрж╛ржирзЛред

ЁЯСЙ ржЙржжрж╛рж╣рж░ржг:
if (snapshot.hasData) {
  return Text(snapshot.data.toString()); // ржбрзЗржЯрж╛ ржжрзЗржЦрж╛ржУ
}

3. snapshot.hasError

ржпржжрж┐ Future ржЪрж▓рж╛ржХрж╛рж▓рзАржи ржХрзЛржирзЛ error рж╣рзЯ тЖТ true рж╣ржмрзЗред

ржмрзНржпржмрж╣рж╛рж░: Error message ржжрзЗржЦрж╛ржирзЛред

ЁЯСЙ ржЙржжрж╛рж╣рж░ржг:

if (snapshot.hasError) {
  return Text("Error: ${snapshot.error}");
}

4. snapshot.data

Future ржерзЗржХрзЗ ржЖрж╕рж╛ ржЖрж╕рж▓ ржбрзЗржЯрж╛ ржПржЦрж╛ржирзЗ ржерж╛ржХрзЗред
ржЯрж╛ржЗржк: Future ржпрзЗржЯрж╛ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗ рж╕рзЗржЯрж╛ржЗ рж╣ржмрзЗред
ЁЯСЙ ржЙржжрж╛рж╣рж░ржг:

final users = snapshot.data!; // ржПржЦрж╛ржирзЗ ржЗржЙржЬрж╛рж░рзЗрж░ рж▓рж┐рж╕рзНржЯ ржЖржЫрзЗ

тЬи рж╕рж╣ржЬ ржЙржжрж╛рж╣рж░ржг ржжрж┐рзЯрзЗ ржоржирзЗ рж░рж╛ржЦрзЛ
ржзрж░рзЛ рждрзБржорж┐ ржПржХржЯрж╛ ржкрж╛рж░рзНрж╕рзЗрж▓ ржЕрж░рзНржбрж╛рж░ ржХрж░рзЗржЫрзЛ ЁЯУж
connectionState.waiting тЖТ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржПржЦржирзЛ ржкржерзЗ (рж▓рзЛржбрж┐ржВ)ред
hasData тЖТ ржкрж╛рж░рзНрж╕рзЗрж▓ ржПрж╕рзЗ ржЧрзЗржЫрзЗ (ржбрзЗржЯрж╛ ржПрж╕рзЗржЫрзЗ)ред
hasError тЖТ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржмрзНржпрж░рзНрже рж╣рзЯрзЗржЫрзЗ (ржПрж░рж░)ред
data тЖТ ржкрж╛рж░рзНрж╕рзЗрж▓рзЗрж░ ржнрзЗрждрж░рзЗ ржЖрж╕рж▓ ржЬрж┐ржирж┐рж╕ржкрждрзНрж░ (рждрзЛржорж╛рж░ ржЖрж╕рж▓ ржбрзЗржЯрж╛)ред

тЬЕ рждрж╛ржЗ snapshot рж╣рж▓рзЛ Future ржПрж░ ржмрж░рзНрждржорж╛ржи ржЕржмрж╕рзНржерж╛ + ржлрж▓рж╛ржлрж▓ ржзрж░рзЗ рж░рж╛ржЦрж╛рж░ ржкрзНржпрж╛ржХрзЗржЬред
...........................................................

1. API Endpoint
ЁЯСЙ https://jsonplaceholder.typicode.com/users

ржПржЦрж╛ржи ржерзЗржХрзЗ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржжрзЗрж░ (users) list ржЖржирж╛ рж╣ржмрзЗред

2. Async Function (ржбрзЗржЯрж╛ ржЖржирж╛)

ЁЯСЙ fetchUsers() ржирж╛ржорзЗрж░ ржПржХржЯрж┐ async function ржмрж╛ржирж╛ржмрзЗред
ЁЯСЙ ржПрж░ ржнрзЗрждрж░рзЗ:
http.get() ржжрж┐рзЯрзЗ API call ржХрж░ржмрзЗред
Response ржХрзЗ jsonDecode ржХрж░ржмрзЗред
Result рж╣ржмрзЗ List of Usersред

3. FutureBuilder (UI рждрзЗ ржЕржмрж╕рзНржерж╛ ржжрзЗржЦрж╛ржирзЛ)
ЁЯСЙ FutureBuilder ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ рждрж┐ржиржЯрж┐ state handle ржХрж░рж╛ ржпрж╛рзЯ:
Loading State тЖТ ржПржЦржирзЛ ржбрзЗржЯрж╛ ржЖрж╕ржЫрзЗ тЖТ CircularProgressIndicator ржжрзЗржЦрж╛ржмрзЗред
Error State тЖТ ржХрж┐ржЫрзБ рж╕ржорж╕рзНржпрж╛ рж╣рж▓рзЗ тЖТ Text("Error") ржжрзЗржЦрж╛ржмрзЗред
Data State тЖТ рж╕ржлрж▓ржнрж╛ржмрзЗ ржбрзЗржЯрж╛ ржПрж▓рзЗ тЖТ ListView ржмрж╛ржирж╛ржмрзЗред

4. ListView + ListTile (ржбрзЗржЯрж╛ ржжрзЗржЦрж╛ржирзЛ)

ЁЯСЙ ржпржжрж┐ ржбрзЗржЯрж╛ ржЖрж╕рзЗ, рждржЦржи ListView.builder ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗред
ЁЯСЙ ржкрзНрж░рждрж┐ржЯрж┐ item рж╣ржмрзЗ ListTile:
title: ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржирж╛ржо (name)
subtitle: ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЗржорзЗржЗрж▓ (email)
.................................................................
рж╕ржорж╕рзНржпрж╛: рждрзБржорж┐ FutureBuilder-ржПрж░ future ржкрзНрж░рзЛржкрж╛рж░рзНржЯрж┐рж░ ржнрзЗрждрж░рзЗ рж╕рж░рж╛рж╕рж░рж┐ fetchData() ржлрж╛ржВрж╢ржиржЯрж┐ржХрзЗ ржХрж▓ ржХрж░рзЗржЫред ржПрж░ ржлрж▓рзЗ, ржпржЦржиржЗ ржПржЗ ржЙржЗржЬрзЗржЯржЯрж┐ ржХрзЛржирзЛ ржХрж╛рж░ржгрзЗ yeniden рждрзИрж░рж┐ (rebuild)
рж╣ржмрзЗ (ржпрзЗржоржи: рж╕рзНржХрзНрж░рж┐ржи рж░рзЛржЯрзЗржЯ ржХрж░рж▓рзЗ ржмрж╛ ржЕржирзНржп ржХрзЛржирзЛ State ржкрж░рж┐ржмрж░рзНрждржи рж╣рж▓рзЗ), fetchData() ржлрж╛ржВрж╢ржиржЯрж┐ ржЖржмрж╛рж░ ржХрж▓ рж╣ржмрзЗ ржПржмржВ ржЕржкрзНрж░рзЯрзЛржЬржирзАрзЯржнрж╛ржмрзЗ API рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ ржкрж╛ржарж╛ржмрзЗред

рж╕ржорж╛ржзрж╛ржи: API ржХрж▓ржЯрж┐ рж╢рзБржзрзБ ржПржХржмрж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп ржЖржорж░рж╛ initState() ржорзЗржержб ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмред initState() ржПржХржЯрж┐ StatefulWidget-ржПрж░ ржЬрзАржмржирзЗ ржорж╛рждрзНрж░ ржПржХржмрж╛рж░ржЗ ржХрж▓ рж╣рзЯред
//////////////////////////////////////////////////////////////////////////////////////
