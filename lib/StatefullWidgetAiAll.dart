import 'package:flutter/material.dart';


/// StatefulWidget Widget Simple Flutter Counter App
/*
тЬЕ ржПржЗ ржкрзНрж░ржЬрзЗржХрзНржЯ ржХрзА ржХрж░рзЗ?
ЁЯФ╕ ржПржЯрж┐ ржПржХржЯрж┐ Simple Counter App
ЁЯФ╕ ржЗржЙржЬрж╛рж░ тЮХ ржмрж╛ржЯржирзЗ ржЪрж╛ржк ржжрж┐рж▓рзЗ рж╕ржВржЦрзНржпрж╛ ржмрж╛рзЬрзЗ
ЁЯФ╕ ржЗржЙржЬрж╛рж░ тЮЦ ржмрж╛ржЯржирзЗ ржЪрж╛ржк ржжрж┐рж▓рзЗ рж╕ржВржЦрзНржпрж╛ ржХржорзЗ
ЁЯФ╕ UI StatefulWidget ржжрж┐рзЯрзЗ рждрзИрж░рж┐ тАФ ржпрж╛рждрзЗ ржЗржЙржЬрж╛рж░ Interaction ржПрж░ ржкрж░ UI ржЖржкржбрзЗржЯ рж╣рзЯред
 */
/*
class practisePage extends StatefulWidget {                        // ЁЯФ╣ рзз. ржПржЯрж┐ ржПржХржЯрж┐ StatefulWidget ржХрзНрж▓рж╛рж╕ ржбрж┐ржлрж╛ржЗржи ржХрж░рзЗред
  const practisePage({super.key});                                // ЁЯФ╣ рзи. ржХржирж╕рзНржЯрзНрж░рж╛ржХрзНржЯрж░ ржбрж┐ржлрж╛ржЗржи, ржЕржкрж╢ржирж╛рж▓ ржХрзА ржЧрзНрж░рж╣ржг ржХрж░рзЗред

  @override
  State<practisePage> createState() => _practisePageState();      // ЁЯФ╣ рзй. ржПржЯрж┐ рж╕рзНржЯрзЗржЯ рждрзИрж░рж┐ ржХрж░рзЗ ржПржмржВ ржирж┐ржЪрзЗрж░ State ржХрзНрж▓рж╛рж╕ржХрзЗ ржХрж▓ ржХрж░рзЗред
}

class _practisePageState extends State<practisePage> {            // ЁЯФ╣ рзк. ржПржЗ ржХрзНрж▓рж╛рж╕рзЗ ржЖржорж╛ржжрзЗрж░ ржЕрзНржпрж╛ржкрзЗрж░ ржкрж░рж┐ржмрж░рзНрждржирж╢рзАрж▓ UI ржерж╛ржХржмрзЗред

  int count = 0;                                                  // ЁЯФ╣ рзл. ржПржЯрж┐ Counter ржнрзНржпрж╛рж▓рзБ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓ред

  @override
  Widget build(BuildContext context) {                            // ЁЯФ╣ рзм. UI рждрзИрж░рж┐ ржХрж░рзЗ build() ржлрж╛ржВрж╢ржирзЗрж░ ржорж╛ржзрзНржпржорзЗред
    return MaterialApp(                                           // ЁЯФ╣ рзн. ржЕрзНржпрж╛ржк рж░рж╛ржи ржХрж░рж╛ржирзЛрж░ ржЬржирзНржп MaterialApp рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗред
      debugShowCheckedModeBanner: false,                          // ЁЯФ╣ рзо. ржЙржкрж░рзЗрж░ debug banner рж▓рзБржХрж╛рзЯред

      home: Scaffold(                                             // ЁЯФ╣ рзп. Scaffold ржжрж┐ржпрж╝рзЗ basic layout рждрзИрж░рж┐ ржХрж░рзЗред

        appBar: AppBar(                                           // ЁЯФ╣ рззрзж. ржЕрзНржпрж╛ржкрзЗрж░ ржЯржк ржмрж╛рж░рзЗ AppBar ржжрзЗржЦрж╛рзЯред
          title: Text("Counter"),                                 // ЁЯФ╣ рззрзз. AppBar-ржП ржЯрж╛ржЗржЯрзЗрж▓ тАЬCounterтАЭ рж▓рзЗржЦрж╛ ржерж╛ржХрзЗред
          backgroundColor: Colors.deepPurple,                     // ЁЯФ╣ рззрзи. AppBar-ржПрж░ ржмрзНржпрж╛ржХржЧрзНрж░рж╛ржЙржирзНржб deep purpleред
        ),

        body: Center(                                             // ЁЯФ╣ рззрзй. Body ржЕржВрж╢рзЗрж░ рж╕ржХрж▓ ржХржирзНржЯрзЗржирзНржЯ Center-ржП рж░рж╛ржЦрзЗред
          child: Column(                                          // ЁЯФ╣ рззрзк. Column widget ржжрж┐рзЯрзЗ Child UI ржЙржкрж░рзЗ ржирж┐ржЪрзЗ рж╕рж╛ржЬрж╛рзЯред
            children: [

              Container(                                          // ЁЯФ╣ рззрзл. ржПржЯрж┐ ржПржХржЯрж┐ Box рждрзИрж░рж┐ ржХрж░рзЗред
                alignment: Alignment.center,                      // ЁЯФ╣ рззрзм. Box-ржПрж░ ржнрж┐рждрж░рзЗрж░ ржХржирзНржЯрзЗржирзНржЯржХрзЗ рж╕рзЗржирзНржЯрж╛рж░рзЗ рж░рж╛ржЦрзЗред
                height: 300,                                      // ЁЯФ╣ рззрзн. Box-ржПрж░ ржЙржЪрзНржЪрждрж╛ рзйрзжрзжред
                width: 300,                                       // ЁЯФ╣ рззрзо. Box-ржПрж░ ржкрзНрж░рж╕рзНрже рзйрзжрзжред
                color: Colors.blue,                               // ЁЯФ╣ рззрзп. Box-ржПрж░ ржмрзНржпрж╛ржХржЧрзНрж░рж╛ржЙржирзНржб ржХрж╛рж▓рж╛рж░ ржирзАрж▓ред

                child: Column(                                    // ЁЯФ╣ рзирзж. Box-ржПрж░ ржнрж┐рждрж░рзЗ ржЖржмрж╛рж░ ржПржХржЯрж┐ Column рж░рж╛ржЦрзЗред
                  mainAxisAlignment: MainAxisAlignment.center,    // ЁЯФ╣ рзирзз. ржнрж┐рждрж░рзЗрж░ Column ржХржирзНржЯрзЗржирзНржЯ рж╕рзЗржирзНржЯрж╛рж░ ржХрж░рзЗред

                  children: [
                    Text(                                         // ЁЯФ╣ рзирзи. Counter рж╕ржВржЦрзНржпрж╛ ржжрзЗржЦрж╛рзЯ (ржпрзЗржоржи: 0, 1, 2...)ред
                      count.toString(),                           // ЁЯФ╣ рзирзй. int тЖТ String ржХржиржнрж╛рж░рзНржЯ ржХрж░рзЗ ржжрзЗржЦрж╛рзЯред
                      style: TextStyle(                           // ЁЯФ╣ рзирзк. ржЯрзЗржХрзНрж╕ржЯрзЗрж░ рж╕рзНржЯрж╛ржЗрж▓рж┐ржВред
                        fontSize: 30,
                        fontWeight: FontWeight.bold,
                        color: Colors.yellow,
                      ),
                      textAlign: TextAlign.center,
                    ),

                    SizedBox(height: 10,),                        // ЁЯФ╣ рзирзл. Counter ржУ ржмрж╛ржЯржирзЗрж░ ржорж╛ржЭрзЗ рззрзж px ржлрж╛ржБржХрж╛ред

                    Row(                                          // ЁЯФ╣ рзирзм. тЮХ ржУ тЮЦ ржмрж╛ржЯржи ржжрзБржЗржЯрж┐ ржПржХ рж▓рж╛ржЗржирзЗ ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп Rowред
                      mainAxisAlignment: MainAxisAlignment.center, // ЁЯФ╣ рзирзн. ржмрж╛ржЯржиржЧрзБрж▓рзЛ ржорж╛ржЭржЦрж╛ржирзЗ рж░рж╛ржЦрзЗред

                      children: [

                        OutlinedButton(                           // ЁЯФ╣ рзирзо. тЮХ ржмрж╛ржЯржирзЗрж░ ржЬржирзНржп OutlinedButtonред
                          onPressed: () {
                            setState(() {
                              count++;                            // ЁЯФ╣ рзирзп. ржмрж╛ржЯржирзЗ ржЪрж╛ржк ржжрж┐рж▓рзЗ count ржмрж╛рзЬрзЗред
                            });
                          },
                          child: Icon(                            // ЁЯФ╣ рзйрзж. ржмрж╛ржЯржирзЗ ржПржХржЯрж┐ + ржЖржЗржХржиред
                            Icons.add,
                            size: 30,
                            color: Colors.yellow,
                          ),
                        ),

                        SizedBox(width: 10,),                     // ЁЯФ╣ рзйрзз. тЮХ ржУ тЮЦ ржмрж╛ржЯржирзЗрж░ ржорж╛ржЭрзЗ ржлрж╛ржБржХрж╛ред

                        OutlinedButton(                           // ЁЯФ╣ рзйрзи. тЮЦ ржмрж╛ржЯржирзЗрж░ ржЬржирзНржп OutlinedButtonред
                          onPressed: () {
                            setState(() {
                              count--;                            // ЁЯФ╣ рзйрзй. ржмрж╛ржЯржирзЗ ржЪрж╛ржк ржжрж┐рж▓рзЗ count ржХржорзЗред
                            });
                          },
                          child: Icon(                            // ЁЯФ╣ рзйрзк. ржмрж╛ржЯржирзЗ ржПржХржЯрж┐ - ржЖржЗржХржиред
                            Icons.remove,
                            size: 30,
                            color: Colors.yellow,
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}


 */

///ржмрж╛ржЯржи ржХрзНрж▓рж┐ржХ ржХрж░рзЗ ржЯрзЗржХрзНрж╕ржЯ ржЪрзЗржЗржЮрзНржЬ
/*
class StatefullWidgetAiAll extends StatefulWidget {
  const StatefullWidgetAiAll({super.key});

  @override
  State<StatefullWidgetAiAll> createState() => _StatefullWidgetAiAllState();
}

class _StatefullWidgetAiAllState extends State<StatefullWidgetAiAll> {
  String txt = "Its Wil be changed Just Click Button";
  String txtCng = "Yes Changed";
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("StatefullWidgetAiAll"),),
      body: Center(
        child: Column(
          children: [
            Container(
              height: 210,
              width: 210,
              margin: EdgeInsets.all(30),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(txt),
                  ElevatedButton(onPressed: (){setState(() {txt = txtCng;});}, child: Text("Changed txt")),
                ],
              ),

            ),
          ],
        ),

      ),
    );
  }
}


 */

// ///Image  ржХрзНрж▓рж┐ржХ ржХрж░рзЗ ржЯрзЗржХрзНрж╕ржЯ ржирж╛ржо ржЪрзЗржЗржЮрзНржЬ
/*

class StatefullWidgetAiAll extends StatefulWidget {
  const StatefullWidgetAiAll({super.key});

  @override
  State<StatefullWidgetAiAll> createState() => _StatefullWidgetAiAllState();
}

class _StatefullWidgetAiAllState extends State<StatefullWidgetAiAll> {
  String username1 = "Saidur Rahman";
  String defult = "Press Image to see Name";
  final String Imgurl = "https://i.postimg.cc/jjKRZgRq/profile-pic-1.png";
  final String Imgurl2 = "https://i.postimg.cc/bNZdjVSY/o1.jpg";
  snkbar(msg,context){
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(msg)));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("StatefullWidgetAiAll"),),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            InkWell(
              onTap: (){
                setState(() {
                  defult = username1;

                });
              },
              child: Container(
                height: 100,
                width: 100,
                decoration: BoxDecoration(
                  shape: BoxShape.circle,
                  image: DecorationImage(image: NetworkImage(Imgurl),fit: BoxFit.cover),
                ),

              ),
            ),
            SizedBox(height: 15),
            Text(defult, style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
            SizedBox(height: 15),

            InkWell(
              onTap: (){
                setState(() {
                  defult = "Siyam";
                });
              },

              child: Container(
                height: 100,
                width: 100,
                decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(image: NetworkImage(Imgurl2),fit: BoxFit.cover),
                    boxShadow: [
                      BoxShadow(
                          color: Colors.black,
                          blurRadius: 10,
                          spreadRadius: 2,
                          offset: Offset(0,2)
                      )
                    ]
                ),


              ),
            )
          ],

        ),
      ),


    );

  }
}


 */





//.......................Extra Copued From Ai................

class StatefullWidgetAiAll extends StatefulWidget {
  const StatefullWidgetAiAll({super.key});

  @override
  State<StatefullWidgetAiAll> createState() => _UserInputPageState();
}

class _UserInputPageState extends State<StatefullWidgetAiAll> {
  // 1. TextEditingController рждрзИрж░рж┐ ржХрж░рж╛
  final TextEditingController _nameController = TextEditingController();

  // 2. State ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓, ржпрж╛ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржирж╛ржо ржзрж╛рж░ржг ржХрж░ржмрзЗ
  String _displayName = '';

  @override
  void dispose() {
    // 3. Controller-ржХрзЗ dispose ржХрж░рж╛ ржЬрж░рзБрж░рж┐, ржирзЯрждрзЛ ржорзЗржорзЛрж░рж┐ рж▓рж┐ржХ рж╣рждрзЗ ржкрж╛рж░рзЗ
    _nameController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("User Input")),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          mainAxisSize: MainAxisSize.min,
          children: [
            // 4. TextField ржПржмржВ Controller-ржХрзЗ ржпрзБржХрзНржд ржХрж░рж╛
            TextField(
              controller: _nameController,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: 'Enter Your Name',
                hintText: 'e.g., Saidur Rahman',
                prefixIcon: Icon(Icons.person),
              ),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // 5. ржмрж╛ржЯржи ржЪрж╛ржкрж▓рзЗ Controller ржерзЗржХрзЗ ржЯрзЗржХрзНрж╕ржЯ ржирж┐рзЯрзЗ State ржЖржкржбрзЗржЯ ржХрж░рж╛
                setState(() {
                  _displayName = _nameController.text;
                });
              },
              child: const Text('Show Name'),
            ),
            const SizedBox(height: 30),
            Text(
              'Hello, $_displayName', // 6. ржЖржкржбрзЗржЯ рж╣ржУрзЯрж╛ ржирж╛ржо ржПржЦрж╛ржирзЗ ржжрзЗржЦрж╛ржирзЛ
              style: const TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
            ),
          ],
        ),
      ),
    );
  }
}

//Another Extra

/*

// ржПржЯрж┐ ржПржХржЯрж┐ StatelessWidget, ржХрж╛рж░ржг ржлрж░рзНржорзЗрж░ ржбрзЗржЯрж╛ ржПржмржВ ржЕржмрж╕рзНржерж╛ (state)
// рж╕рж░рж╛рж╕рж░рж┐ ржПржЗ ржХрзНрж▓рж╛рж╕рзЗ рж░рж╛ржЦрж╛ рж╣рзЯржирж┐ред
class StatefullWidgetAiAll extends StatelessWidget {
  // тЬЕ _formKey: ржлрж░рзНржорзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ ржЗржЙржирж┐ржХ ржЪрж╛ржмрж┐ ржмрж╛ рж╢ржирж╛ржХрзНрждржХрж╛рж░рзАред
  // ржПрж░ ржорж╛ржзрзНржпржорзЗ ржлрж░рзНржорзЗрж░ ржмрж░рзНрждржорж╛ржи ржЕржмрж╕рзНржерж╛ (state) ржирж┐рзЯржирзНрждрзНрж░ржг ржХрж░рж╛ ржпрж╛рзЯред
  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();

  // тЬЕ TextEditingController: ржирж╛ржо ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбрзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ рж░рж┐ржорзЛржЯ ржХржирзНржЯрзНрж░рзЛрж▓ред
  // ржПрж░ ржорж╛ржзрзНржпржорзЗ ржлрж┐рж▓рзНржбрзЗрж░ рж▓рзЗржЦрж╛ ржкрзЬрж╛ ржмрж╛ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛ ржпрж╛рзЯред
  final TextEditingController nameCtrl = TextEditingController();

  // тЬЕ TextEditingController: ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбрзЗрж░ ржЬржирзНржп ржЖрж░рзЗржХржЯрж┐ рж░рж┐ржорзЛржЯ ржХржирзНржЯрзНрж░рзЛрж▓ред
  final TextEditingController passCtrl = TextEditingController();

  // ржПржЗ ржлрж╛ржВрж╢ржиржЯрж┐ ржмрж╛ржЯржи ржХрзНрж▓рж┐ржХ ржХрж░рж▓рзЗ ржХрж▓ рж╣ржмрзЗред
  void submitData(BuildContext context) {
    // ржлрж░рзНржорзЗрж░ validate() ржорзЗржержб ржХрж▓ ржХрж░рзЗ рж╕ржм validator ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред
    if (_formKey.currentState!.validate()) {
      // ржпржжрж┐ рж╕ржм ржлрж┐рж▓рзНржбрзЗрж░ ржнрзНржпрж╛рж▓рж┐ржбрзЗрж╢ржи рж╕ржарж┐ржХ рж╣рзЯ...

      // ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржирж╛ржо ржПржмржВ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржбрзЗрж░ рж▓рзЗржЦрж╛ржЧрзБрж▓рзЛ ржкрзЬрж╛ рж╣ржЪрзНржЫрзЗред
      String name = nameCtrl.text;
      String pass = passCtrl.text;

      // тЬЕ ScaffoldMessenger: рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржирж┐ржЪрзЗ ржПржХржЯрж┐ ржорзЗрж╕рзЗржЬ (SnackBar) ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржпред
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("Welcome $name! Login Successful тЬЕ")),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Login Form")),
      body: Padding(
        padding: EdgeInsets.all(20),
        // тЬЕ Form: ржПржХрж╛ржзрж┐ржХ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбржХрзЗ ржПржХржЯрж┐ ржЧрзНрж░рзБржк рж╣рж┐рж╕рзЗржмрзЗ ржзрж░рзЗ рж░рж╛ржЦрзЗред
        child: Form(
          key: _formKey, // ржлрж░рзНржорзЗрж░ рж╕рж╛ржерзЗ ржЪрж╛ржмрж┐ржЯрж┐ ржпрзБржХрзНржд ржХрж░рж╛ рж╣рж▓рзЛред
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // ЁЯСЙ Name Field
              TextFormField(
                controller: nameCtrl, // ржирж╛ржо ржлрж┐рж▓рзНржбрзЗрж░ рж╕рж╛ржерзЗ рждрж╛рж░ ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржпрзБржХрзНржд ржХрж░рж╛ рж╣рж▓рзЛред
                decoration: InputDecoration(labelText: "Enter your name"),
                // тЬЕ validator: ржПржЗ ржлрж┐рж▓рзНржбрзЗрж░ ржЗржиржкрзБржЯ ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛рж░ ржирж┐рзЯржоред
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    // ржпржжрж┐ ржлрж┐рж▓рзНржб ржЦрж╛рж▓рж┐ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржПржЗ ржПрж░рж░ ржорзЗрж╕рзЗржЬржЯрж┐ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗред
                    return 'Name cannot be empty';
                  }
                  return null; // ржпржжрж┐ рж╕ржм ржарж┐ржХ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ null рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рждрзЗ рж╣ржмрзЗред
                },
              ),
              SizedBox(height: 20),

              // ЁЯСЙ Password Field
              TextFormField(
                controller: passCtrl, // ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржлрж┐рж▓рзНржбрзЗрж░ рж╕рж╛ржерзЗ рждрж╛рж░ ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржпрзБржХрзНржд ржХрж░рж╛ рж╣рж▓рзЛред
                obscureText: true,    // тЬЕ obscureText: рж▓рзЗржЦрж╛рж░ ржЕржХрзНрж╖рж░ржЧрзБрж▓рзЛржХрзЗ * ржЪрж┐рж╣рзНржи ржжрж┐рзЯрзЗ ржЧрзЛржкржи рж░рж╛ржЦрзЗред
                decoration: InputDecoration(labelText: "Enter your password"),
                validator: (value) {
                  if (value == null || value.length < 6) {
                    // ржпржжрж┐ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб рзм ржЕржХрзНрж╖рж░рзЗрж░ ржХржо рж╣рзЯ, рждрж╛рж╣рж▓рзЗ ржПрж░рж░ ржорзЗрж╕рзЗржЬ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗред
                    return 'Password must be at least 6 characters';
                  }
                  return null;
                },
              ),
              SizedBox(height: 30),

              // ЁЯСЙ Submit Button
              ElevatedButton(
                // ржмрж╛ржЯржи ржЪрж╛ржкрж▓рзЗ submitData ржлрж╛ржВрж╢ржиржЯрж┐ ржХрж▓ рж╣ржмрзЗред
                onPressed: () => submitData(context),
                child: Text("Login"),
              )
            ],
          ),
        ),
      ),
    );
  }
}

 */