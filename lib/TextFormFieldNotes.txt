ЁЯФ░ TextFormField ржмрж╛ржирж╛ржирзЛрж░ ржЬржирзНржп Tree Structure:
Form
 тФФтФАтФА key: _formKey тЖТ ржлрж░рзНржо ржирж┐рзЯржирзНрждрзНрж░ржг ржХрж░рждрзЗ
 тФФтФАтФА child: Column тЖТ ржлрж░рзНржорзЗрж░ ржнрж┐рждрж░рзЗ ржПрж▓рж┐ржорзЗржирзНржЯ рж░рж╛ржЦрждрзЗ
      тФЬтФАтФА TextFormField
      тФВ    тФЬтФАтФА controller тЖТ TextEditingController ржжрж┐рзЯрзЗ ржзрж░рзЛ
      тФВ    тФЬтФАтФА decoration тЖТ Label, Hint, Border
      тФВ    тФФтФАтФА validator тЖТ ржЗржиржкрзБржЯ ржЪрзЗржХ
      тФЬтФАтФА TextFormField (ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб)
      тФВ    тФЬтФАтФА obscureText: true тЖТ рж▓рзБржХрж┐рзЯрзЗ рж░рж╛ржЦрзЗ
      тФВ    тФЬтФАтФА controller тЖТ passCtrl
      тФВ    тФЬтФАтФА validator тЖТ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб рж╢рж░рзНржд ржЪрзЗржХ
      тФФтФАтФА ElevatedButton тЖТ onPressed ржП ржлрж░рзНржо рж╕рж╛ржмржорж┐ржЯ
            тФФтФАтФА if (_formKey.currentState!.validate()) тЖТ рж╕ржарж┐ржХ ржХрж┐ржирж╛ ржпрж╛ржЪрж╛ржЗ
                  тФФтФАтФА ScaffoldMessenger.of(context).showSnackBar(...) тЖТ ржорзЗрж╕рзЗржЬ


                Form + _formKey = ржХржирзНржЯрзНрж░рзЛрж▓ рж╕рзЗржирзНржЯрж╛рж░

                TextFormField + controller = ржЗржиржкрзБржЯ ржзрж░рж╛рж░ ржмрзНржпржмрж╕рзНржерж╛

                validator = ржнрзБрж▓ ржЗржиржкрзБржЯ ржзрж░рж╛рж░ ржирж┐рзЯржо

                ScaffoldMessenger = ржлрж▓рж╛ржлрж▓ ржжрзЗржЦрж╛ржирзЛрж░ ржорзЗрж╕рзЗржЬ

                obscureText = ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржирж┐рж░рж╛ржкржжрзЗ рж░рж╛ржЦрж╛рж░ ржЙржкрж╛рзЯ

.................................................................................
тЬЕ Form
рж╕рж╣ржЬ ржмрзНржпрж╛ржЦрзНржпрж╛: Form рж╣рж▓рзЛ ржПржХржЯрж┐ ржЖржмрзЗржжржиржкрждрзНрж░рзЗрж░ ржорждрзЛред ржпрзЗржоржи рж╕рзНржХрзБрж▓рзЗ ржнрж░рзНрждрж┐рж░ ржЬржирзНржп ржПржХржЯрж┐ ржЖржмрзЗржжржиржкрждрзНрж░рзЗ ржирж╛ржо, ржарж┐ржХрж╛ржирж╛, ржлрзЛржи ржиржорзНржмрж░рзЗрж░ ржЬржирзНржп ржЖрж▓рж╛ржжрж╛ ржЖрж▓рж╛ржжрж╛ ржШрж░ ржерж╛ржХрзЗ, рждрзЗржоржирж┐ ржлрзНрж▓рж╛ржЯрж╛рж░рзЗ Form ржЙржЗржЬрзЗржЯржЯрж┐ ржирж╛ржо, ржЗржорзЗржЗрж▓, ржкрж╛рж╕ржУрзЯрж╛рж░рзНржбрзЗрж░ ржорждрзЛ ржПржХрж╛ржзрж┐ржХ TextFormField-ржХрзЗ ржПржХржЯрж┐ ржЧрзНрж░рзБржк рж╣рж┐рж╕рзЗржмрзЗ ржзрж░рзЗ рж░рж╛ржЦрзЗред

ржХрж╛ржЬ: ржПрж░ ржорзВрж▓ ржХрж╛ржЬ рж╣рж▓рзЛ ржПрж░ ржнрзЗрждрж░рзЗрж░ рж╕ржорж╕рзНржд ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбржХрзЗ ржПржХрж╕рж╛ржерзЗ ржпрж╛ржЪрж╛ржЗ (validate) ржХрж░рж╛ ржПржмржВ рж╕ржВрж░ржХрзНрж╖ржг (save) ржХрж░рж╛ред

тЬЕ _formKey (GlobalKey)
рж╕рж╣ржЬ ржмрзНржпрж╛ржЦрзНржпрж╛: ржПржЯрж┐ рж╣рж▓рзЛ рж╕рзЗржЗ ржЖржмрзЗржжржиржкрждрзНрж░рзЗрж░ ржПржХржЯрж┐ ржЗржЙржирж┐ржХ рж╕рж┐рж░рж┐рзЯрж╛рж▓ ржиржорзНржмрж░ ржмрж╛ ржЖржЗржбрж┐ред ржзрж░рзБржи, ржЕржирзЗржХржЧрзБрж▓рзЛ ржЖржмрзЗржжржиржкрждрзНрж░рзЗрж░ ржоржзрзНржпрзЗ ржЖржкржирж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржПржХржЯрж┐ржХрзЗ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рждрзЗ ржЪрж╛ржи, рждржЦржи ржПржЗ рж╕рж┐рж░рж┐рзЯрж╛рж▓ ржиржорзНржмрж░ржЯрж┐ ржХрж╛ржЬрзЗ рж▓рж╛ржЧрзЗред

ржХрж╛ржЬ: ржПржЗ _formKey ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржкржирж┐ ржХрзЛржбрзЗрж░ ржпрзЗржХрзЛржирзЛ ржЬрж╛рзЯржЧрж╛ ржерзЗржХрзЗ ржР ржирж┐рж░рзНржжрж┐рж╖рзНржЯ Form-ржХрзЗ ржмрж▓рждрзЗ ржкрж╛рж░ржмрзЗржи, "рждрзЛржорж╛рж░ ржнрзЗрждрж░рзЗрж░ рж╕ржм ржлрж┐рж▓рзНржб ржПржЦржи ржпрж╛ржЪрж╛ржЗ ржХрж░рзЛ (_formKey.currentState!.validate())"ред

тЬЕ validator
рж╕рж╣ржЬ ржмрзНржпрж╛ржЦрзНржпрж╛: ржПржЯрж┐ рж╣рж▓рзЛ ржЖржмрзЗржжржиржкрждрзНрж░рзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржШрж░рзЗрж░ ржкрж╛рж╢рзЗ рж▓рзЗржЦрж╛ ржирж┐рзЯржорж╛ржмрж▓рзАред ржпрзЗржоржи: "ржирж╛ржорзЗрж░ ржШрж░ ржЦрж╛рж▓рж┐ рж░рж╛ржЦрж╛ ржпрж╛ржмрзЗ ржирж╛" ржмрж╛ "ржмрзЯрж╕ ржЕржмрж╢рзНржпржЗ рззрзо ржмржЫрж░рзЗрж░ ржмрзЗрж╢рж┐ рж╣рждрзЗ рж╣ржмрзЗ"ред

ржХрж╛ржЬ: validator-ржПрж░ ржнрзЗрждрж░рзЗ ржЖржкржирж┐ ржПржХржЯрж┐ ржирж┐рзЯржо рж▓рж┐ржЦрзЗ ржжрзЗржиред ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржпржЦржи ржХрж┐ржЫрзБ ржЗржиржкрзБржЯ ржжрзЗрзЯ, ржПржЗ ржирж┐рзЯржоржЯрж┐ ржЪрзЗржХ ржХрж░рж╛ рж╣рзЯред ржпржжрж┐ ржирж┐рзЯржо ржнржЩрзНржЧ рж╣рзЯ (ржпрзЗржоржи: ржирж╛ржорзЗрж░ ржШрж░ ржЦрж╛рж▓рж┐ рж░рж╛ржЦрж╛ рж╣рзЯ), рждрж╛рж╣рж▓рзЗ ржПржЯрж┐ ржПржХржЯрж┐ ржПрж░рж░ ржорзЗрж╕рзЗржЬ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗ ржпрж╛ рж╕рзНржХрзНрж░рж┐ржирзЗ ржжрзЗржЦрж╛ржирзЛ рж╣рзЯред ржЖрж░ ржпржжрж┐ рж╕ржм ржарж┐ржХ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ null рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗред

тЬЕ TextEditingController
рж╕рж╣ржЬ ржмрзНржпрж╛ржЦрзНржпрж╛: ржПржЯрж┐ рж╣рж▓рзЛ ржкрзНрж░рждрж┐ржЯрж┐ ржЗржиржкрзБржЯ ржмржХрзНрж╕рзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ рж░рж┐ржорзЛржЯ ржХржирзНржЯрзНрж░рзЛрж▓ ЁЯОоред ржПржЗ рж░рж┐ржорзЛржЯ ржжрж┐рзЯрзЗ ржЖржкржирж┐ ржЬрж╛ржирждрзЗ ржкрж╛рж░рзЗржи ржмржХрзНрж╕рзЗ ржХрзА рж▓рзЗржЦрж╛ ржЖржЫрзЗ (.text), ржмржХрзНрж╕рзЗрж░ рж▓рзЗржЦрж╛ ржорзБржЫрзЗ ржлрзЗрж▓рждрзЗ ржкрж╛рж░рзЗржи (.clear()), ржмрж╛ ржирждрзБржи ржХрзЛржирзЛ рж▓рзЗржЦрж╛ рж╕рзЗржЯ ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред

ржХрж╛ржЬ: TextFormField-ржПрж░ ржнрзЗрждрж░рзЗрж░ рж▓рзЗржЦрж╛ ржкрзЬрж╛ ржмрж╛ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛рж░ ржЬржирзНржп ржПржЯрж┐ ржЕржкрж░рж┐рж╣рж╛рж░рзНржпред

тЬЕ ScaffoldMessenger.of(context)
рж╕рж╣ржЬ ржмрзНржпрж╛ржЦрзНржпрж╛: ржПржЯрж┐ рж╣рж▓рзЛ ржЖржкржирж╛рж░ ржЕрзНржпрж╛ржкрзЗрж░ ржмрж░рзНрждржорж╛ржи рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржЬржирзНржп ржПржХржЬржи ржмрж╛рж░рзНрждрж╛ ржмрж╛рж╣ржХ ржмрж╛ ржорзЗрж╕рзЗржЮрзНржЬрж╛рж░ messengerред ржЖржкржирж┐ рждрж╛ржХрзЗ ржПржХржЯрж┐ ржмрж╛рж░рзНрждрж╛ (SnackBar) ржжрж┐рж▓рзЗ, рж╕рзЗ рж╕рзЗржЯрж┐ рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржирж┐ржЪрзЗ рж╕рзБржирзНржжрж░ ржХрж░рзЗ ржХрж┐ржЫрзБржХрзНрж╖ржгрзЗрж░ ржЬржирзНржп ржжрзЗржЦрж┐рзЯрзЗ ржЖржмрж╛рж░ ржЪрж▓рзЗ ржпрж╛рзЯред

ржХрж╛ржЬ: ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржХрзЛржирзЛ ржЫрзЛржЯ рждржерзНржп (ржпрзЗржоржи: "Login Successful" ржмрж╛ "No Internet") ржЬрж╛ржирж╛ржирзЛрж░ ржЬржирзНржп ржПржЯрж┐ ржмрзНржпржмрж╣рзГржд рж╣рзЯред

тЬЕ obscureText: true
рж╕рж╣ржЬ ржмрзНржпрж╛ржЦрзНржпрж╛: ржПржЯрж┐ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржлрж┐рж▓рзНржбрзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ ржЧрзЛржкржирзАрзЯрждрж╛рж░ ржкрж░рзНржжрж╛ред ржпржЦржи ржПржЯрж┐ true ржХрж░рж╛ рж╣рзЯ, рждржЦржи ржЖржкржирж┐ ржпрж╛-ржЗ ржЯрж╛ржЗржк ржХрж░рзБржи ржирж╛ ржХрзЗржи, рж╕рзНржХрзНрж░рж┐ржирзЗ рж╢рзБржзрзБ * ржмрж╛ тАв ржЪрж┐рж╣рзНржи ржжрзЗржЦрж╛ ржпрж╛рзЯ, ржЖрж╕рж▓ ржЕржХрзНрж╖рж░ржЧрзБрж▓рзЛ ржжрзЗржЦрж╛ ржпрж╛рзЯ ржирж╛ред

ржХрж╛ржЬ: ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржмрж╛ ржЕржирзНржп ржХрзЛржирзЛ рж╕ржВржмрзЗржжржирж╢рзАрж▓ рждржерзНржп ржЯрж╛ржЗржк ржХрж░рж╛рж░ рж╕ржорзЯ ржкрж╛рж╢рзЗрж░ рж▓рзЛржХ ржпрзЗржи рждрж╛ ржжрзЗржЦрзЗ ржлрзЗрж▓рждрзЗ ржирж╛ ржкрж╛рж░рзЗ, рждрж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рж╛ред

TextFormField
тФВ
тФЬтФАтФА ЁЯза controller: (ржирж┐рзЯржирзНрждрзНрж░ржгрзЗрж░ ржЬржирзНржп)
тФВ   тФФтФАтФА TextEditingController() // рж▓рзЗржЦрж╛ ржкрзЬрж╛ ржмрж╛ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржЬржирзНржп рж░рж┐ржорзЛржЯ ржХржирзНржЯрзНрж░рзЛрж▓ред
тФВ
тФЬтФАтФА ЁЯОи decoration: (рж╕рж╛ржЬрж╛ржирзЛрж░ ржЬржирзНржп)
тФВ   тФФтФАтФА InputDecoration( // ржлрж┐рж▓рзНржбрзЗрж░ ржнрзЗрждрж░рзЗрж░ ржУ ржмрж╛ржЗрж░рзЗрж░ рж╕рзНржЯрж╛ржЗрж▓ред
тФВ       тФВ
тФВ       тФЬтФАтФА labelText: "Enter your name"  // ржлрж┐рж▓рзНржбрзЗрж░ ржЙржкрж░рзЗ ржнрж╛рж╕ржорж╛ржи ржПржХржЯрж┐ рж▓рзЗржЦрж╛ред
тФВ       тФЬтФАтФА hintText: "e.g., John Doe"     // ржлрж┐рж▓рзНржбрзЗрж░ ржнрзЗрждрж░рзЗ рж╣рж╛рж▓ржХрж╛ ржХрж░рзЗ ржжрзЗржЦрж╛ржирзЛ ржЙржжрж╛рж╣рж░ржгред
тФВ       тФЬтФАтФА prefixIcon: Icon(Icons.person) // ржлрж┐рж▓рзНржбрзЗрж░ рж▓рзЗржЦрж╛рж░ ржЖржЧрзЗ ржПржХржЯрж┐ ржЖржЗржХржиред
тФВ       тФЬтФАтФА suffixIcon: Icon(Icons.visibility) // ржлрж┐рж▓рзНржбрзЗрж░ рж▓рзЗржЦрж╛рж░ ржкрж░рзЗ ржПржХржЯрж┐ ржЖржЗржХржиред
тФВ       тФФтФАтФА border: OutlineInputBorder()    // ржлрж┐рж▓рзНржбрзЗрж░ ржЪрж╛рж░ржкрж╛рж╢рзЗ ржПржХржЯрж┐ ржмрж░рзНржбрж╛рж░ред
тФВ
тФЬтФАтФА тЪЦя╕П validator: (ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛рж░ ржЬржирзНржп)
тФВ   тФФтФАтФА (value) { // ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи ржпрж╛ ржЗржиржкрзБржЯ ржХрж░рж╛ 'value' ржЪрзЗржХ ржХрж░рзЗред
тФВ       тФВ
тФВ       тФЬтФАтФА if (value is empty) { return "Error message"; } // ржирж┐рзЯржо ржнржЩрзНржЧ рж╣рж▓рзЗ ржПрж░рж░ ржорзЗрж╕рзЗржЬред
тФВ       тФФтФАтФА return null; // ржирж┐рзЯржо рж╕ржарж┐ржХ рж╣рж▓рзЗ nullред
тФВ
тФЬтФАтФА ЁЯФР obscureText: true // ржкрж╛рж╕ржУрзЯрж╛рж░рзНржбрзЗрж░ ржЬржирзНржп рж▓рзЗржЦрж╛ ржЧрзЛржкржи ржХрж░рждрзЗред
тФВ
тФФтФАтФА тМия╕П keyboardType: (ржХрж┐ржмрзЛрж░рзНржбрзЗрж░ ржзрж░ржи)
    тФФтФАтФА TextInputType.emailAddress // ржЗржорзЗржЗрж▓ рж▓рзЗржЦрж╛рж░ ржЬржирзНржп @ рж╕рж╣ ржХрж┐ржмрзЛрж░рзНржбред
    тФФтФАтФА TextInputType.number       // рж╢рзБржзрзБ ржиржорзНржмрж░ рж▓рзЗржЦрж╛рж░ ржЬржирзНржп ржХрж┐ржмрзЛрж░рзНржбред

    .,,..................................................................................................
    Importent: Automatic

    ЁЯСЙ Flutter/Dart ржПрж░ email_validator ржкрзНржпрж╛ржХрзЗржЬржУ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛рзЯ:

    dependencies:
      email_validator: ^2.0.1

    import 'package:email_validator/email_validator.dart';

    validator: (value) {
      if (!EmailValidator.validate(value!)) {
        return 'Invalid email';
      }
      return null;
    }



    ........................................................
Manual:

    validator: (value) {
      if (value == null || value.isEmpty) {
        return 'Email cannot be empty';
      } else if (!RegExp(r'^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$').hasMatch(value)) {
        return 'Enter a valid email address';
      }
      return null;
    },

ЁЯза ржмрзНржпрж╛ржЦрзНржпрж╛:
RegExp() тЖТ ржПржЯрж┐ ржПржХржЯрж┐ Regular Expression (ржирж┐рзЯржо ржЕржирзБржпрж╛рзЯрзА pattern) ржЪрзЗржХ ржХрж░рзЗ

hasMatch(value) тЖТ ржЗржЙржЬрж╛рж░ ржЗржиржкрзБржЯ ржЗржорзЗржЗрж▓ ржУржЗ ржкрзНржпрж╛ржЯрж╛рж░рзНржирзЗ ржорзНржпрж╛ржЪ ржХрж░рзЗ ржХрж┐ржирж╛ рждрж╛ ржжрзЗржЦрзЗ

| ржЗржиржкрзБржЯ            | ржмрзИржз? | ржХрзЗржи?                 |
| ---------------- | ---- | -------------------- |
| `abc`            | тЭМ    | @ ржирзЗржЗ                |
| `abc@`           | тЭМ    | ржбрзЛржорзЗржЗржи ржирзЗржЗ           |
| `abc@gmail`      | тЭМ    | `.com` ржмрж╛ `.org` ржирзЗржЗ |
| `abc @gmail.com` | тЭМ    | рж╕рзНржкрзЗрж╕ ржЖржЫрзЗ            |
| `abc@gmail.com`  | тЬЕ    | ржмрзИржз                  |

!RegExp(r'^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$').hasMatch(value)

ржПржЯрж╛рж░ ржорж╛ржирзЗ ржХрзА ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржмрзБржЭрзЗ ржирж┐ржЗ:

ЁЯФ╣ Step 1: RegExp(...)
ржПржЯрж┐ Dart ржПрж░ Regular Expression ржХрзНрж▓рж╛рж╕, ржпрзЗржЯрж╛ ржжрж┐рзЯрзЗ pattern match ржХрж░рж╛ рж╣рзЯред

ЁЯФ╣ Step 2: r'^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'
ржПржЯрж╛ржЗ рж╣ржЪрзНржЫрзЗ ржЗржорзЗржЗрж▓ ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛рж░ patternред
ржПржЯрж╛ ржПржХржЯрзБ ржЬржЯрж┐рж▓ ржжрзЗржЦрж╛рж▓рзЗржУ ржЖржорж┐ рждрзЛржорж╛рж░ ржЬржирзНржп рж╕рж╣ржЬ ржХрж░рзЗ ржнрзЗржЩрзЗ ржмрзБржЭрж┐рзЯрзЗ ржжрж┐ржЪрзНржЫрж┐:

тЬЕ RegExp ржмрзНржпрж╛ржЦрзНржпрж╛ (ржнрж╛ржЩрж╛ ржЕржВрж╢рзЗ):
| ржЕржВрж╢           | ржорж╛ржирзЗ                                                             |
| ------------- | ---------------------------------------------------------------- |
| `^`           | рж╕рзНржЯрзНрж░рж┐ржВ рж╢рзБрж░рзБ ржерзЗржХрзЗ ржЪрзЗржХ рж╢рзБрж░рзБ                                       |
| `[\w-\.]+`    | ржЗржЙржЬрж╛рж░ржирзЗржо ржЕржВрж╢: ржпрзЗржХрзЛржирзЛ рж╕ржВржЦрзНржпрж╛, рж▓рзЗржЯрж╛рж░, `_`, `-`, `.` (ржПржХ ржмрж╛ ржПржХрж╛ржзрж┐ржХ) |
| `@`           | ржПржХржжржо ржорж╛ржЭржЦрж╛ржирзЗ `@` ржерж╛ржХрждрзЗ рж╣ржмрзЗ                                       |
| `([\w-]+\.)+` | ржбрзЛржорзЗржЗржирзЗрж░ ржЕржВрж╢: ржпрзЗржоржи `gmail.` (ржПржХ ржмрж╛ ржПржХрж╛ржзрж┐ржХ рж╣рждрзЗ ржкрж╛рж░рзЗ)              |
| `[\w-]{2,4}`  | рж╢рзЗрж╖ ржЕржВрж╢: ржпрзЗржоржи `com`, `net` ржЗрждрзНржпрж╛ржжрж┐ (рзи ржерзЗржХрзЗ рзк ржЕржХрзНрж╖рж░)              |
| `$`           | рж╕рзНржЯрзНрж░рж┐ржВрзЯрзЗрж░ рж╢рзЗрж╖ ржкрж░рзНржпржирзНржд ржЪрзЗржХ ржХрж░рзЗ                                   |

ржЙржжрж╛рж╣рж░ржг:
тЬЕ ржорзНржпрж╛ржЪ ржХрж░рзЗ:
abc@gmail.com

name.saidur@domain.org

тЭМ ржорзНржпрж╛ржЪ ржХрж░рзЗ ржирж╛:
abc тЖТ ржХрж╛рж░ржг @ ржирзЗржЗ

abc@ тЖТ ржХрж╛рж░ржг ржбрзЛржорзЗржЗржи ржирзЗржЗ

abc@gmail тЖТ .com ржирзЗржЗ

abc@gmail.toolong тЖТ рж╢рзЗрж╖рзЗрж░ ржЕржВрж╢ рзк ржЕржХрзНрж╖рж░рзЗрж░ ржмрзЗрж╢рж┐

ЁЯФ╣ Step 3: .hasMatch(value)
ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржиржкрзБржЯ value ржПржЗ pattern ржПрж░ рж╕ржЩрзНржЧрзЗ ржорж┐рж▓ржЫрзЗ ржХрж┐ржирж╛ рждрж╛ ржЪрзЗржХ ржХрж░рзЗред

true рж╣рж▓рзЗ тЖТ ржЗржорзЗржЗрж▓ valid тЬЕ

false рж╣рж▓рзЗ тЖТ invalid тЭМ
...................................................................................................
----------------------------
Code Sumarize1
----------------------------
import 'package:flutter/cupertino.dart';               // iOS рж╕рзНржЯрж╛ржЗрж▓рзЗрж░ ржЙржЗржЬрзЗржЯ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп ржЗржорзНржкрзЛрж░рзНржЯ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ (ржпржжрж┐ржУ ржХрзЛржбрзЗ ржмрзНржпржмрж╣рзГржд рж╣рзЯржирж┐)ред
import 'package:flutter/material.dart';                 // ржорзНржпрж╛ржЯрзЗрж░рж┐рзЯрж╛рж▓ ржбрж┐ржЬрж╛ржЗржирзЗрж░ рж╕ржорж╕рзНржд ржЙржЗржЬрзЗржЯ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп ржЗржорзНржкрзЛрж░рзНржЯ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред

// ржПржЯрж┐ ржПржХржЯрж┐ StatelessWidget, ржХрж╛рж░ржг ржПрж░ ржЕржмрж╕рзНржерж╛ (state) рж╕рж░рж╛рж╕рж░рж┐ ржПржЗ ржХрзНрж▓рж╛рж╕рзЗ ржкрж░рж┐ржмрж░рзНрждржи рж╣рзЯ ржирж╛ред
class TextFormFieldEditingController extends StatelessWidget {
  TextFormFieldEditingController({super.key});      // ржХрзНрж▓рж╛рж╕рзЗрж░ ржХржирж╕рзНржЯрзНрж░рж╛ржХрзНржЯрж░ред

  // ржлрж░рзНржоржХрзЗ рж╢ржирж╛ржХрзНржд ржПржмржВ ржирж┐рзЯржирзНрждрзНрж░ржг ржХрж░рж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ ржЗржЙржирж┐ржХ ржЪрж╛ржмрж┐ ржмрж╛ ржЖржЗржбрж┐ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред
  final _formKey = GlobalKey<FormState>();
  // 'ржирж╛ржо' ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбрзЗрж░ рж▓рзЗржЦрж╛ ржкрзЬрж╛ ржмрж╛ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ред
  TextEditingController nameC = TextEditingController();
  // 'ржЗржорзЗржЗрж▓' ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбрзЗрж░ ржЬржирзНржп ржЖрж░рзЗржХржЯрж┐ ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ред
  TextEditingController emailC = TextEditingController();
  // 'ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб' ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбрзЗрж░ ржЬржирзНржп рждрзГрждрзАрзЯ ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ред
  TextEditingController passC = TextEditingController();

  // рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржирж┐ржЪрзЗ ржПржХржЯрж┐ ржорзЗрж╕рзЗржЬ (SnackBar) ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп ржПржХржЯрж┐ рж╣рзЗрж▓рзНржкрж╛рж░ ржлрж╛ржВрж╢ржиред
  snkbtn(msg, context) {
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(msg)));
  }

  @override
  Widget build(BuildContext context) {                  // ржПржЗ ржорзЗржержбржЯрж┐ рж╕рзНржХрзНрж░рж┐ржирзЗрж░ UI рждрзИрж░рж┐ ржХрж░рзЗред
    return Scaffold(                                    // ржЕрзНржпрж╛ржкрзЗрж░ ржорзВрж▓ ржкрзЗржЬ ржХрж╛ржарж╛ржорзЛред
      appBar: AppBar(                                   // ржкрзЗржЬрзЗрж░ ржЙржкрж░рзЗрж░ ржЕржВрж╢ ржмрж╛ ржЯрж╛ржЗржЯрзЗрж▓ ржмрж╛рж░ред
        title: Text("TextFormFieldEditingController"),  // AppBar-ржПрж░ ржЯрж╛ржЗржЯрзЗрж▓ред
        leading: Icon(Icons.text_decrease),             // AppBar-ржПрж░ ржмрж╛ржо ржкрж╛рж╢рзЗ ржПржХржЯрж┐ ржЖржЗржХржиред
        backgroundColor: Colors.amber,                  // AppBar-ржПрж░ ╪з┘Д╪о┘Д┘Б┘К╪й рж░ржЩред
      ),
      body: SafeArea(                                   // UI-ржХрзЗ ржлрзЛржирзЗрж░ ржиржЪ ржмрж╛ рж╕рж┐рж╕рзНржЯрзЗржо ржмрж╛рж░ ржерзЗржХрзЗ ржирж┐рж░рж╛ржкржж рж░рж╛ржЦрзЗред
        child: Padding(                                 // рж╕ржмржжрж┐ржХрзЗ рзирзж ржкрж┐ржХрзНрж╕рзЗрж▓ ржлрж╛ржБржХрж╛ ржЬрж╛рзЯржЧрж╛ рждрзИрж░рж┐ ржХрж░рзЗред
          padding: EdgeInsets.all(20),
          child: Form(                                  // ржПржХрж╛ржзрж┐ржХ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбржХрзЗ ржПржХржЯрж┐ ржЧрзНрж░рзБржк рж╣рж┐рж╕рзЗржмрзЗ ржзрж░рзЗ рж░рж╛ржЦрзЗред
            key: _formKey,                              // ржлрж░рзНржорзЗрж░ рж╕рж╛ржерзЗ ржкрзВрж░рзНржмрзЗ рждрзИрж░рж┐ ржХрж░рж╛ ржЪрж╛ржмрж┐ржЯрж┐ ржпрзБржХрзНржд ржХрж░рж╛ рж╣рж▓рзЛред
            child: Column(                              // ржнрзЗрждрж░рзЗрж░ ржЙржЗржЬрзЗржЯржЧрзБрж▓рзЛржХрзЗ ржУржкрж░ ржерзЗржХрзЗ ржирж┐ржЪрзЗ рж╕рж╛ржЬрж╛рзЯред
              mainAxisAlignment: MainAxisAlignment.start, // ржХрж▓рж╛ржорзЗрж░ ржЖржЗржЯрзЗржоржЧрзБрж▓рзЛ ржУржкрж░ ржерзЗржХрзЗ рж╢рзБрж░рзБ рж╣ржмрзЗред
              children: [
                TextFormField(                          // 'ржирж╛ржо'-ржПрж░ ржЬржирзНржп ржПржХржЯрж┐ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбред
                  controller: nameC,                    // ржПржЗ ржлрж┐рж▓рзНржбржЯрж┐ржХрзЗ 'nameC' ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржжрж┐рзЯрзЗ ржирж┐рзЯржирзНрждрзНрж░ржг ржХрж░рж╛ рж╣ржмрзЗред
                  decoration: InputDecoration(          // ржлрж┐рж▓рзНржбржЯрж┐ржХрзЗ рж╕рзБржирзНржжрж░ржнрж╛ржмрзЗ рж╕рж╛ржЬрж╛ржирзЛрж░ ржЬржирзНржпред
                      labelText: "Name",                // ржлрж┐рж▓рзНржбрзЗрж░ ржЙржкрж░рзЗ ржПржХржЯрж┐ рж▓рзЗржмрзЗрж▓ред
                      hintText: "Enter Your Valid Name",// ржлрж┐рж▓рзНржбрзЗрж░ ржнрзЗрждрж░рзЗ ржПржХржЯрж┐ ржЙржжрж╛рж╣рж░ржг рж▓рзЗржЦрж╛ред
                      border: OutlineInputBorder(),     // ржлрж┐рж▓рзНржбрзЗрж░ ржЪрж╛рж░ржкрж╛рж╢рзЗ ржПржХржЯрж┐ ржмрж░рзНржбрж╛рж░ред
                      suffixIcon: Icon(Icons.person)    // ржлрж┐рж▓рзНржбрзЗрж░ рж╢рзЗрж╖рзЗ ржПржХржЯрж┐ ржЖржЗржХржиред
                  ),
                  validator: (value) {                  // ржПржЗ ржлрж┐рж▓рзНржбрзЗрж░ рж▓рзЗржЦрж╛ ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛рж░ ржирж┐рзЯржоред
                    if (value!.isEmpty || value == null) { // ржпржжрж┐ рж▓рзЗржЦрж╛ржЯрж┐ ржЦрж╛рж▓рж┐ ржмрж╛ null рж╣рзЯред
                      return 'Name cannot be empty';    // рждрж╛рж╣рж▓рзЗ ржПржЗ ржПрж░рж░ ржорзЗрж╕рзЗржЬржЯрж┐ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗред
                    }
                    return null;                        // ржпржжрж┐ рж╕ржм ржарж┐ржХ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржХрзЛржирзЛ ржПрж░рж░ ржирзЗржЗред
                  },
                ),
                SizedBox(height: 10),                   // ржжрзБржЯрж┐ ржлрж┐рж▓рзНржбрзЗрж░ ржоржзрзНржпрзЗ рззрзж ржкрж┐ржХрзНрж╕рзЗрж▓ ржлрж╛ржБржХрж╛ ржЬрж╛рзЯржЧрж╛ред

                TextFormField(                          // 'ржЗржорзЗржЗрж▓'-ржПрж░ ржЬржирзНржп ржПржХржЯрж┐ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбред
                  keyboardType: TextInputType.emailAddress, // ржХрж┐ржмрзЛрж░рзНржбржЯрж┐ ржЗржорзЗржЗрж▓ рж▓рзЗржЦрж╛рж░ ржЙржкржпрзЛржЧрзА рж╣ржмрзЗред
                  controller: emailC,                   // ржПржЗ ржлрж┐рж▓рзНржбржЯрж┐ржХрзЗ 'emailC' ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржжрж┐рзЯрзЗ ржирж┐рзЯржирзНрждрзНрж░ржг ржХрж░рж╛ рж╣ржмрзЗред
                  decoration: InputDecoration(labelText: "Email", hintText: "Ex: example@gmail.com", border: OutlineInputBorder(), suffixIcon: Icon(Icons.mail)),
                  validator: (value) {                  // ржЗржорзЗржЗрж▓ ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛рж░ ржирж┐рзЯржоред
                    if (value!.isEmpty || value == null) { // ржпржжрж┐ ржлрж┐рж▓рзНржбржЯрж┐ ржЦрж╛рж▓рж┐ ржерж╛ржХрзЗред
                      return 'Email cannot be empty';   // рждрж╛рж╣рж▓рзЗ ржПржЗ ржПрж░рж░ ржорзЗрж╕рзЗржЬ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗред
                    } else if (RegExp(r'^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$').hasMatch(value) == false) { // ржпржжрж┐ рж▓рзЗржЦрж╛ржЯрж┐ ржПржХржЯрж┐ рж╕ржарж┐ржХ ржЗржорзЗржЗрж▓ ржлрж░ржорзНржпрж╛ржЯрзЗ ржирж╛ ржерж╛ржХрзЗред
                      return 'Email is not valid';      // рждрж╛рж╣рж▓рзЗ ржПржЗ ржПрж░рж░ ржорзЗрж╕рзЗржЬ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗред
                    }
                    return null;                        // ржпржжрж┐ рж╕ржм ржарж┐ржХ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржХрзЛржирзЛ ржПрж░рж░ ржирзЗржЗред
                  },
                ),
                SizedBox(height: 10),                   // ржжрзБржЯрж┐ ржлрж┐рж▓рзНржбрзЗрж░ ржоржзрзНржпрзЗ рззрзж ржкрж┐ржХрзНрж╕рзЗрж▓ ржлрж╛ржБржХрж╛ ржЬрж╛рзЯржЧрж╛ред

                TextFormField(                          // 'ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб'-ржПрж░ ржЬржирзНржп ржПржХржЯрж┐ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбред
                  controller: passC,                    // ржПржЗ ржлрж┐рж▓рзНржбржЯрж┐ржХрзЗ 'passC' ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржжрж┐рзЯрзЗ ржирж┐рзЯржирзНрждрзНрж░ржг ржХрж░рж╛ рж╣ржмрзЗред
                  decoration: InputDecoration(labelText: "Password", hintText: "Enter Your Valid Password", border: OutlineInputBorder(), suffixIcon: Icon(Icons.lock)),
                  validator: (value) {                  // ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛рж░ ржирж┐рзЯржоред
                    if (value!.isEmpty) {               // ржпржжрж┐ ржлрж┐рж▓рзНржбржЯрж┐ ржЦрж╛рж▓рж┐ ржерж╛ржХрзЗред
                      return 'Password cannot be empty';// рждрж╛рж╣рж▓рзЗ ржПржЗ ржПрж░рж░ ржорзЗрж╕рзЗржЬ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗред
                    } else if (value.length < 6) {      // ржпржжрж┐ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржбрзЗрж░ ржжрзИрж░рзНржШрзНржп рзм ржЕржХрзНрж╖рж░рзЗрж░ ржХржо рж╣рзЯред
                      return 'Password must be at least 6 characters'; // рждрж╛рж╣рж▓рзЗ ржПржЗ ржПрж░рж░ ржорзЗрж╕рзЗржЬ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗред
                    }
                    return null;                        // ржпржжрж┐ рж╕ржм ржарж┐ржХ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржХрзЛржирзЛ ржПрж░рж░ ржирзЗржЗред
                  },
                ),
                SizedBox(height: 10),                   // ржлрж┐рж▓рзНржб ржПржмржВ ржмрж╛ржЯржирзЗрж░ ржоржзрзНржпрзЗ рззрзж ржкрж┐ржХрзНрж╕рзЗрж▓ ржлрж╛ржБржХрж╛ ржЬрж╛рзЯржЧрж╛ред
                ElevatedButton(                         // ржПржХржЯрж┐ ржмрж╛ржЯржи рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред
                  onPressed: () {                       // ржмрж╛ржЯржи ржЪрж╛ржкрж▓рзЗ ржПржЗ ржХрзЛржбржЯрж┐ рж░рж╛ржи рж╣ржмрзЗред
                    if (_formKey.currentState!.validate()) { // ржлрж░рзНржорзЗрж░ рж╕ржм validator ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред
                      // ржпржжрж┐ рж╕ржм ржлрж┐рж▓рзНржбрзЗрж░ ржнрзНржпрж╛рж▓рж┐ржбрзЗрж╢ржи рж╕ржарж┐ржХ рж╣рзЯ...
                      snkbtn("Account Created for [${nameC.text}]!", context); // рждрж╛рж╣рж▓рзЗ рж╕ржлрж▓ ржмрж╛рж░рзНрждрж╛ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗред
                    }
                  },
                  child: Text("Submit"),                // ржмрж╛ржЯржирзЗрж░ ржнрзЗрждрж░рзЗрж░ рж▓рзЗржЦрж╛ред
                  style: ElevatedButton.styleFrom(      // ржмрж╛ржЯржирзЗрж░ рж╕рзНржЯрж╛ржЗрж▓ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛рж░ ржЬржирзНржпред
                      backgroundColor: Colors.lightBlueAccent, // ржмрж╛ржЯржирзЗрж░ ╪з┘Д╪о┘Д┘Б┘К╪й рж░ржЩред
                      foregroundColor: Colors.black      // ржмрж╛ржЯржирзЗрж░ рж▓рзЗржЦрж╛рж░ рж░ржЩред
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}


